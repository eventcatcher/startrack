// Di Jan 10 22:05:00 1996
// DSP1.LDF
// prototype-Version
// 128Bit->64Bit Umsetzung fuer Startrack DA & DigitalOut (64Bit)
// Memory-Select fuer DSP-Memory
//
// fuer DSP-Karte
//
LDF 1.00.00 DESIGNLDF;
DESIGN dsp1;
REVISION V1.0;
AUTHOR Stephan Wilhelm;
PROJECTNAME StarTrack;

PART ispLSI1016-60LJ;

DECLARE
END;  //DECLARE

SYM GLB  A0  1  pclk;
SIGTYPE PCLK      Out ; // Clock fuer Shiftregister1
SIGTYPE PSCLK     Out ; // invertiertes SCLKPI
SIGTYPE POSFO     Reg ; // positiver SCLK-Taktimpuls

EQUATIONS

POSFO = VCC;
POSFO.PTCLK = SCLKPI;
POSFO.RE = FOCLRI;

PSCLK = POSFO
      # NEGFO
      # WORT & BPI2 & BPI1 & BPI0;

PCLK = !WPI4 & !WPI3 & BPI0 & !DACH1 & !DACH0
       # WPI3 & BPI1 & !DACH1 & !DACH0
       # !WPI4 & WPI3 & BPI0 & !DACH1 & DACH0
       # !WPI3 & BPI1 & !DACH1 & DACH0
       # WPI4 & !WPI3 & BPI0 & DACH1 & !DACH0
       # WPI3 & BPI1 & DACH1 & !DACH0
       # WPI4 & WPI3 & BPI0 & DACH1 & DACH0
       # !WPI3 & BPI1 & DACH1 & DACH0;

END;
END;


SYM GLB  A1  1  adrdecode&clk;
SIGTYPE MEM_CS    Out ; // DSP-Speicher ChipSelect
SIGTYPE RAM14     Out ; // Speicher-Adressleitung A14
SIGTYPE NEGFO     Reg ; // negativer SCLK-Taktimpuls
SIGTYPE FOCLR	  Out ; // Frame-Flanke loeschen

EQUATIONS

FOCLR = POSFO # NEGFO;

MEM_CS = !(!MEM_A15 & !MEM_DS
         # !MEM_A15 & !MEM_PS);

RAM14 = MEM_XY & MEM_PS
      # MEM_A14 & !MEM_PS;

NEGFO = VCC;
NEGFO.PTCLK = !SCLKPI;
NEGFO.RE = FOCLRI;

END;
END;


SYM GLB  A3  1  count1;
SIGTYPE BPI0      Reg ; // Play-SCLKzaehler und Synchro
SIGTYPE BPI1      Reg ; // Play-SCLKzaehler und Synchro
SIGTYPE BPI2      Reg ; // Play-SCLKzaehler und Synchro
SIGTYPE WPI0      Reg ; // Play-SWORDzaehler und Synchro
CBU14 (BPI0,BPI1,BPI2,WPI0,CAO1,VCC,PSCLK,PCNTCLR) // 2Bit-Zaehler
END;


SYM GLB  A2  1  count2;
SIGTYPE WPI1      Reg ; // Play-SWORDzaehler und Synchro
SIGTYPE WPI2      Reg ; // Play-SWORDzaehler und Synchro
SIGTYPE WPI3      Reg ; // Play-SWORDzaehler und Synchro
SIGTYPE WPI4      Reg ; // Play-SWORDzaehler und Synchro
CBU14 (WPI1,WPI2,WPI3,WPI4,CAO2,CAO1,PSCLK,PCNTCLR) // 2Bit-Zaehler
END;


SYM GLB  A4  1  frameclr;
SIGTYPE PCNTCLR   Reg ; // CounterClear durch pos FsyncImpuls
SIGTYPE DATAPO    Out ; // Daten-Ausgang fuer DA-Wandler
SIGTYPE WORT      Out ; // Node fuer Clockbegrenzung von PSCLK
EQUATIONS

PCNTCLR = VCC;
PCNTCLR.PTCLK = DFSYNC;
PCNTCLR.RE = !WPI4 & !WPI3 & !WPI2 & !WPI1 & !WPI0 & !BPI2 & !BPI1 & !BPI0;

DATAPO = SHQ31 & WPI3 & !DACH0
       # SHQ31 & !WPI3 & DACH0;


WORT = WPI4 & WPI3 & WPI2 & WPI1 & WPI0;

END;
END;


SYM GLB  A5  1  framestrt;
SIGTYPE DFSYNC    Out ; // Counter-Framestart
SIGTYPE SCLKPO    Out ; // Takt fuer DSP-Port
SIGTYPE FSYNCPO   Out ; // Sync fuer DSP-Port
SIGTYPE DATPO     Out ; // Data fuer DSP-Port

EQUATIONS

DFSYNC = FSYNCPI & SCLKPI
       # FSYNCPI & DFSYNC2;

SCLKPO = SCLKPI;

FSYNCPO = FSYNCPI;

DATPO = DATAPI;

END;
END;


SYM GLB  B0  1  shift1;
SIGTYPE SHQ0      Reg ; // 
SIGTYPE SHQ1      Reg ; // 
SIGTYPE SHQ2      Reg ; // 
SIGTYPE SHQ3      Reg ; // 
SRR14 ([SHQ0..SHQ3],DATAPI,PCLK,GND) // 4Bit-Shifter
END;

SYM GLB  B1  1  shift2;
SIGTYPE SHQ4      Reg ; // 
SIGTYPE SHQ5      Reg ; // 
SIGTYPE SHQ6      Reg ; // 
SIGTYPE SHQ7      Reg ; // 
SRR14 ([SHQ4..SHQ7],SHQ3,PCLK,GND) // 4Bit-Shifter
END;

SYM GLB  B2  1  shift3;
SIGTYPE SHQ8      Reg ; // 
SIGTYPE SHQ9      Reg ; // 
SIGTYPE SHQ10     Reg ; // 
SIGTYPE SHQ11     Reg ; // 
SRR14 ([SHQ8..SHQ11],SHQ7,PCLK,GND) // 4Bit-Shifter
END;

SYM GLB  B3  1  shift4;
SIGTYPE SHQ12     Reg ; // 
SIGTYPE SHQ13     Reg ; // 
SIGTYPE SHQ14     Reg ; // 
SIGTYPE SHQ15     Reg ; // 
SRR14 ([SHQ12..SHQ15],SHQ11,PCLK,GND) // 4Bit-Shifter
END;

SYM GLB  B4  1  shift5;
SIGTYPE SHQ16     Reg ; // 
SIGTYPE SHQ17     Reg ; // 
SIGTYPE SHQ18     Reg ; // 
SIGTYPE SHQ19     Reg ; // 
SRR14 ([SHQ16..SHQ19],SHQ15,PCLK,GND) // 4Bit-Shifter
END;

SYM GLB  B5  1  shift6;
SIGTYPE SHQ20     Reg ; // 
SIGTYPE SHQ21     Reg ; // 
SIGTYPE SHQ22     Reg ; // 
SIGTYPE SHQ23     Reg ; // 
SRR14 ([SHQ20..SHQ23],SHQ19,PCLK,GND) // 4Bit-Shifter
END;

SYM GLB  B6  1  shift7;
SIGTYPE SHQ24     Reg ; // 
SIGTYPE SHQ25     Reg ; // 
SIGTYPE SHQ26     Reg ; // 
SIGTYPE SHQ27     Reg ; // 
SRR14 ([SHQ24..SHQ27],SHQ23,PCLK,GND) // 4Bit-Shifter
END;

SYM GLB  B7  1  shift8;
SIGTYPE SHQ28     Reg ; // 
SIGTYPE SHQ29     Reg ; // 
SIGTYPE SHQ30     Reg ; // 
SIGTYPE SHQ31     Reg ; // 
SRR14 ([SHQ28..SHQ31],SHQ27,PCLK,GND) // 4Bit-Shifter
END;



SYM IOC  IO1  1 FSYNCPI;
XPIN IO XFSYNCPI LOCK 15;  // DMA-Out-Framesync
IB11(FSYNCPI,XFSYNCPI)
END;

SYM IOC  IO2  1 MEM_CS;
XPIN IO XMEM_CS LOCK 28;  // DSP-Speicher ChipSelect
OB11(XMEM_CS,MEM_CS)
END;

SYM IOC  IO3  1 MEM_A15;
XPIN IO XMEM_A15 LOCK 39;  // DSP-Speicher A15
IB11(MEM_A15,XMEM_A15)
END;

SYM IOC  IO4  1 MEM_A14;
XPIN IO XMEM_A14 LOCK 38;  // DSP-Speicher A14
IB11(MEM_A14,XMEM_A14)
END;

SYM IOC  IO5  1 MEM_DS;
XPIN IO XMEM_DS LOCK 37;  // DSP-Speicher Datastrobe
IB11(MEM_DS,XMEM_DS)
END;

SYM IOC  IO6  1 RAM14;
XPIN IO XRAM14 LOCK 42;  // Speicher-Adressleitung A14
OB11(XRAM14,RAM14)
END;

SYM IOC  IO7  1 MEM_PS;
XPIN IO XMEM_PS LOCK 32;  // DSP-Speicher PS
IB11(MEM_PS,XMEM_PS)
END;

SYM IOC  IO8  1 SCLKPI;
XPIN IO XSCLKPI LOCK 43;  // DMA-Out-Takt
IB11(SCLKPI,XSCLKPI)
END;

SYM IOC  IO9  1 MEM_XY;
XPIN IO XMEM_XY LOCK 31;  // DSP-Speicher XY
IB11(MEM_XY,XMEM_XY)
END;

SYM IOC  IO10  1 DATAPI;
XPIN IO XDATAPI LOCK 8;  // DMA-Out-Data
IB11(DATAPI,XDATAPI)
END;

SYM IOC  IO11  1 DATAPO;
XPIN IO XDATAPO LOCK 20;  // DA-Out-Data
OB11(XDATAPO,DATAPO)
END;

SYM IOC  IO12  1 PCLK;
XPIN IO XPCLK LOCK 41;  // DA-Out-Data
OB11(XPCLK,PCLK)
END;

SYM IOC  IO13  1 FOCLR;
XPIN IO XFOCLR LOCK 5;  // Frame-Flanke loeschen
OB11(XFOCLR,FOCLR)
END;

SYM IOC  IO14  1 FOCLRI;
XPIN IO XFOCLRI LOCK 40;  // Signalrueckfuehrung von FOCLR
IB11(FOCLRI,XFOCLRI)
END;

SYM IOC  IO15  1 DACH0;
XPIN IO XDACH0 LOCK 30;  // DA-Kanal-Auswahl
IB11(DACH0,XDACH0)
END;

SYM IOC  IO16  1 DACH1;
XPIN IO XDACH1 LOCK 29;  // DA-Kanal-Auswahl
IB11(DACH1,XDACH1)
END;

SYM IOC  IO17  1 DFSYNC2;
XPIN IO XDFSYNC2 LOCK 17;  // Counter-Clear-selbsthaltung
IB11(DFSYNC2,XDFSYNC2)
END;

SYM IOC  IO18  1 DFSYNC;
XPIN IO XDFSYNC LOCK 18;  // Counter-Clear
OB11(XDFSYNC,DFSYNC)
END;

SYM IOC  IO19  1 SCLKPO;
XPIN IO XSCLKPO LOCK 26;  // Takt fuer DSP-Port
OB11(XSCLKPO,SCLKPO)
END;

SYM IOC  IO20  1 FSYNCPO;
XPIN IO XFSYNCPO LOCK 25;  // Framesync fuer DSP-Port
OB11(XFSYNCPO,FSYNCPO)
END;

SYM IOC  IO21  1 DATPO;
XPIN IO XDATPO LOCK 27;  // Data fuer DSP-Port
OB11(XDATPO,DATPO)
END;
