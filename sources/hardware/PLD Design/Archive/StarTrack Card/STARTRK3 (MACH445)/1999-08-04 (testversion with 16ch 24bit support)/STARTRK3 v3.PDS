;PALASM Design Description

;---------------------------------- Declaration Segment ------------

TITLE    STAR3X24.PDS        ; Test PCB-Version 16-Channel/24Bit
PATTERN  A
REVISION 1.0
AUTHOR   Stephan Wilhelm
COMPANY  SW Development
DATE     07/17/99

CHIP  _star3x24  MACH445

; - 24Bit-Audiosampler fuer VME-Bus Atari mit Highsampling-Support

; - Hauptsteuerung der Rec/Play-Funktionen
; - vollstÑndiger SCMS-Decoder inclusive Professional-Mode
; - 4Kanal-Play & 4Kanal-Record mit getrenntem abhîren, fullduplex
; - 24Bit-digitalmode
; - 64,88.2 & 96kHz-digitalmode
; - 128Bit-Play und Record-Mode, vollstÑndiger Continuousmode (2,4,6,8-Kanal)
; - neue D/A und DigitalOut-Ansteuerung
; - Matrix-Connector, external & DSP gemeinsam
; - Kickstart fÅr D/A-Wandler via FSYNC (/DA1 & /DA0 & CHANNEL0)
; - 16Kanal-PlayMode
; - Åberarbeitete Timing-Machine
; - zusÑtzlicher 128Bit-MatrixInput fÅr 128Bit-Record mit D/A-Monitoring
; - A/D zusÑtzlich im 128Bit-Mode mit direktem D/A und DigitalOut-Monitoring
; - Digital In im SlaveMode und angepa·t an 128Bit-Mode (CH 1+3)
; - Digital In Readout von User Channel Statusbytes fÅr StartmarkenÅbernahme
; - Support fÅr Jam-In Recording,Jam-Out,Analog8,ADAT
; - full Highsampling-Support fÅr ADC,DAC und Digital I/O (64,88.2,96 kHz)
; - Support fuer 16Channel DSP (256Bit)
; - Support fuer Special 24Bit-DAC-MixTransfer im Falconmode (128Bit & 256Bit)
; - Support fuer 24Bit-Transfer im Falconmode (256Bit & 512Bit)
; - komplettes Digital Status-Read (CBL,C,U) Åber add 8Bit FIFO-Block
;
;
; Release 6.8.1999


;---------------------------------- PIN Declarations ---------------
PIN  99         PDAT128    ; PDATA-Input 128Bit-Daten for 128Bit-Record
PIN  4          MCLK33     ; 33.8688 MHz-Takt
PIN  13         MCLK24     ; 24.5760 MHz-Takt
PIN  88         SMPREG     ; VME-Adressdekoder von STARTRK1
PIN  87         A7         ; VME-Adressleitung
PIN  86         A6         ; VME-Adressleitung
PIN  93         RESET      ; VME-RESET
PIN  48         CBL        ; Channel Status Block des CS8412
PIN  45         AESDATAI   ; SDATA des CS8412
PIN  44         AESCIN     ; C des CS8412
PIN  54         USERDATA   ; USER Datablock des 8412
PIN  46         AESMCLKI   ; MCK des 8412
PIN  69         RD0        PAIR RP0 ; Datenausgang des PLAY-FIFO
PIN  12         RD1        PAIR RP1 ; Datenausgang des PLAY-FIFO
PIN  11         RD2        PAIR RP2 ; Datenausgang des PLAY-FIFO
PIN  10         RD3        PAIR RP3 ; Datenausgang des PLAY-FIFO
PIN  7          RD4        PAIR RP4 ; Datenausgang des PLAY-FIFO
PIN  6          RD5        PAIR RP5 ; Datenausgang des PLAY-FIFO
PIN  5          RD6        PAIR RP6 ; Datenausgang des PLAY-FIFO
PIN  100        RD7        PAIR RP7 ; Datenausgang des PLAY-FIFO
PIN  9          RD8        ; Datenausgang des PLAY-FIFO
PIN  35         ADATAI     ; SDATA des A/D-Wandlers CS5339
PIN  63         DA_ACKO    ; ACKO des D/A-Wandlers CS4328 (128x L/R-CLK)
PIN  60         DSPSTD     ; SERIAL-DATA-Ausgang des DSP
PIN  98         D0         ; VME-Datenleitung
PIN  97         D1         ; VME-Datenleitung
PIN  96         D2         ; VME-Datenleitung
PIN  95         D3         ; VME-Datenleitung
PIN  94         D4         ; VME-Datenleitung
PIN  18         EXTMCLK    ; Externer MCLKx256 fÅr externe Synchronisation
PIN  68         PLAYCLKI   ; CLK-Input fÅr PLAY-Register
PIN  50         AESCLKI    COMBINATORIAL ; SCK fÅr 8412
PIN  83         DSPSC1     COMBINATORIAL ; zum SC1-Eingang des DSP (FSYNC-32)
PIN  82         DSPSC2     COMBINATORIAL ; zum SC2-Eingang des DSP (L/R-16)
PIN  74         DSPSCK     COMBINATORIAL ; zum Clock-Eingang des DSP
PIN  73         DSPSRD     COMBINATORIAL ; zum SERIAL-Read-Eingang des DSP
PIN  38         CKS        COMBINATORIAL ; Master-Clock-SW CS4328,CMODE CS5339
PIN  34         SMPCLK     COMBINATORIAL ; zum XTI CS4328, ICLKD CS5339
PIN  58         DA_SDATA   COMBINATORIAL ; zum SDATAI des CS4328
PIN  71         AESPRO     COMBINATORIAL ; zum PRO des CS8402A
PIN  70         AESFC0     COMBINATORIAL ; zum FC0 des CS8402A
PIN  59         AESFC1     COMBINATORIAL ; zum FC1 des CS8402A
PIN  72         AESMCLKO   COMBINATORIAL ; zum MCK des CS8402A
PIN  81         AESCOUT    COMBINATORIAL ; zum C/SBF des CS8402A
PIN  62         AESDATAO   COMBINATORIAL ; SDATA fÅr CS8402A (Delayed)
PIN  57         DA_SCLK    COMBINATORIAL ; zum SCLK CS8402A und BICK des D/A
PIN  56         DA_FSYNC   COMBINATORIAL ; zum FSYNC des CS8402A und CS4328
PIN  33         PUFWR         REGISTERED ; zum REC-FIFO Write
PIN  8          PUFRD      COMBINATORIAL ; zum PLAY-FIFO Read
PIN  19         WD0           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  20         WD1           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  21         WD2           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  22         WD3           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  24         WD4           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  25         WD5           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  26         WD6           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  31         WD7           REGISTERED ; zum Dateneingang des REC-FIFO
PIN  23         WD8        COMBINATORIAL ; zum Dateneingang des Rec-FIFO
PIN  32         RESRDFIFO  COMBINATORIAL ; RESET des REC-FIFO
PIN  36         ADCLKO     COMBINATORIAL ; CLK-Ausgang fÅr den CS5339
PIN  37         ADLROUT    COMBINATORIAL ; L/R fÅr den CS5339
PIN  61         SWDIGIN       REGISTERED ; zum Relais OPTO/CINCH
PIN  47         SWSUBFR       REGISTERED ; SEL fÅr den CS8412
PIN  43         SWPROT        REGISTERED ; Schalter SCMS fÅr Digitalkopie
PIN  75         VOLCLK        REGISTERED ; Schalter CLK fÅr Volume Control
PIN  76         VOLDATAI      REGISTERED ; Schalter DATAI fÅr Volume Control
PIN  84         AESFREQ    COMBINATORIAL ; Abfrage der Digitalfrequenz
PIN  49         PREEMPH       REGISTERED ; Schaltet Preemphasis bei CS8402A
PIN  55         PLAYCLKO   COMBINATORIAL ; CLK-Term fÅr PLAY-Register
PIN  85         ADCLK      COMBINATORIAL ; Zusatztakt fÅr DatenConverter
NODE ?          CLKPLAY    COMBINATORIAL ; Takt fÅr Play
NODE ?          SUM24         REGISTERED ; Schalter 24Bit-Summe im Networkmode
NODE ?          DIG24         REGISTERED ; Schalter 24Bit-Digitalmode
NODE ?          ADCLK32       REGISTERED ; 32BIT-CLK fÅr den CS5339
NODE ?          FSHLP      COMBINATORIAL ;
NODE ?          FSHLP2     COMBINATORIAL ;
NODE ?          PUFWHLP    COMBINATORIAL ;
NODE ?          PUFRHLP       REGISTERED ; zum PLAY-FIFO Read
NODE ?          AESCLR     COMBINATORIAL ; Bits(0+1)die gelîscht werden sollen
NODE ?          CLKREC     COMBINATORIAL ; Takt fÅr Record
NODE ?          DAHLP      COMBINATORIAL ; SDATA-PLAY-Erzeugung
NODE ?          FSREC      COMBINATORIAL ; synchr. zur pos.Rec-FSYNC-Flanke
NODE ?          FREQCLK1   COMBINATORIAL ; CLK fÅr Anzeige der Samplefrequenz
NODE ?          VCLK       COMBINATORIAL ; fÅr Masterclock des Digital-Out
NODE ?          WSTART     COMBINATORIAL ; RESET fÅr Play-WORD-ZÑhler
NODE ?          UDHELP     COMBINATORIAL ;
NODE ?          WRESET        REGISTERED ; RESET fÅr Play-WORD-ZÑhler
NODE ?          ADLR          REGISTERED ; L/R fÅr den CS5339
NODE ?          REC4          REGISTERED ; Schalter 4Kanal-Aufnahme
NODE ?          PLAY4         REGISTERED ; Schalter 4Kanal-Wiedergabe
NODE ?          AESC0         REGISTERED ; Status CS8412 Consumer/Professional
NODE ?          SWDSB         REGISTERED ; Schalter digital status block
NODE ?          CHANNEL0      REGISTERED ; Kanalauswahl fÅr 8Channel-Play
NODE ?          CHANNEL1      REGISTERED ; Kanalauswahl fÅr 8Channel-Play
NODE ?          RRESET        REGISTERED ; RESET fÅr Rec-WORD-ZÑhler
NODE ?          MCLK128       REGISTERED ; 128x MCLK fÅr CS8402 Consumer-Mode
NODE ?          ADCLK16       REGISTERED ; 16BIT-CLK fÅr einen A/D-Wandler
NODE ?          HOLD          REGISTERED ; HOLD fÅr einen A/D-Wandler
NODE ?          RP9           REGISTERED ; last Sync fÅr PlayFifo
NODE ?          RP8           REGISTERED ; Sync-Speicher fÅr PlayFifo-Input
NODE ?          RP7           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP6           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP5           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP4           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP3           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP2           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP1           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP0           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          TAKT5         REGISTERED ; Frequenz-Zwischenteiler fÅr A/D
NODE ?          TAKT6         REGISTERED ; Frequenz-Zwischenteiler fÅr A/D
NODE ?          TAKT7         REGISTERED ; Frequenz-Zwischenteiler fÅr A/D
NODE ?          DIGMOD        REGISTERED ; Schalter Digitalmode
NODE ?          SWMAL2        REGISTERED ; Schalter 96kHz-Digitalmode
NODE ?          PSWM128       REGISTERED ; Schalter 2Channel/8Channel Play
NODE ?          SWAES         REGISTERED ; Zwischenspeicher/Schalter DIGI/ANA
NODE ?          REGMATA       REGISTERED ; Matrix-EmpfÑnger-Register auswÑhlen
NODE ?          REGMATZ0      REGISTERED ; Matrix-EmpfÑnger-Register zÑhlen
NODE ?          REGMATZ1      REGISTERED ; Matrix-EmpfÑnger-Register zÑhlen
NODE ?          DMAREC0       REGISTERED ; Schalter Quelle von Record
NODE ?          DMAREC1       REGISTERED ; Schalter Quelle von Record
NODE ?          DA0           REGISTERED ; Schalter Quelle von D/A
NODE ?          DA1           REGISTERED ; Schalter Quelle von D/A
NODE ?          DSPIN0        REGISTERED ; Schalter Quelle von DSP-Input
NODE ?          DSPIN1        REGISTERED ; Schalter Quelle von DSP-Input
NODE ?          SWRESFF       REGISTERED ; Schalter/Auslîser Reset fÅr RecFIFO
NODE ?          SWPROF        REGISTERED ; Schalter Consumer/Prof-Mode
NODE ?          TAKTL         REGISTERED ; Zwischenspeicher/Schalter SMPrate
NODE ?          TAKTH         REGISTERED ; Zwischenspeicher/Schalter SMPrate
NODE ?          EXTAKT        REGISTERED ; Zwischenspeicher/Schalter ext.MCLK
NODE ?          CLKDIRECT     REGISTERED ; Zwischenspeicher/Schalter ext.MCLK
NODE ?          ZP0           REGISTERED ; Play-SCLKzÑhler und Synchro
NODE ?          ZP1           REGISTERED ; Play-SCLKzÑhler und Synchro
NODE ?          ZP2           REGISTERED ; Play-SCLKzÑhler und Synchro
NODE ?          WP0           REGISTERED ; Play-SWORDzÑhler und Synchro
NODE ?          WP1           REGISTERED ; Play-SWORDzÑhler und Synchro
NODE ?          WP2           REGISTERED ; Play-SWORDzÑhler und Synchro
NODE ?          WP3           REGISTERED ; Play-SWORDzÑhler und Synchro
NODE ?          WP4           REGISTERED ; Play-SWORDzÑhler und Synchro
NODE ?          WP5           REGISTERED ; Play-SWORDzÑhler und Synchro
NODE ?          ZR0           REGISTERED ; Rec-SCLKzÑhler und Synchro
NODE ?          ZR1           REGISTERED ; Rec-SCLKzÑhler und Synchro
NODE ?          ZR2           REGISTERED ; Rec-SCLKzÑhler und Synchro
NODE ?          WR0           REGISTERED ; Rec-SWORDzÑhler und Synchro
NODE ?          WR1           REGISTERED ; Rec-SWORDzÑhler und Synchro
NODE ?          WR2           REGISTERED ; Rec-SWORDzÑhler und Synchro
NODE ?          WR3           REGISTERED ; Rec-SWORDzÑhler und Synchro
NODE ?          WR4           REGISTERED ; Rec-SWORDzÑhler und Synchro
NODE ?          WR5           REGISTERED ; Rec-SWORDzÑhler und Synchro
NODE ?          MCLK12        REGISTERED ; fÅr Frequenzerzeugung
NODE ?          MCLK16        REGISTERED ; fÅr Frequenzerzeugung
NODE ?          AESC24        REGISTERED ; Frequenz-Angabe durch CBL
NODE ?          AESC25        REGISTERED ; Frequenz-Angabe durch CBL
NODE ?          PCH16         REGISTERED ; 16Kanal-Playmode
NODE ?          VAESCOUT      COMBINATORIAL ; Hilfsterm fuer AESCOUT
NODE ?          AESDHLP       COMBINATORIAL ;
NODE ?          BYPMODE       COMBINATORIAL ;
NODE ?          VAESFC1       COMBINATORIAL ;
NODE ?          RRESHLP       COMBINATORIAL ;
NODE ?          OUTCLK        COMBINATORIAL ;
NODE ?          DA_SHLP       COMBINATORIAL ;
NODE ?          VV            REGISTERED ;

SIGNATURE #str3
;----------------------------------- Boolean Equation Segment ------
EQUATIONS

; ---------------------Register

SWAES = D0;
/SWAES.CLKF = /SMPREG * /A7 * /A6;
SWAES.RSTF = /RESET;

SWDIGIN = D1;
/SWDIGIN.CLKF = /SMPREG * /A7 * /A6;
SWDIGIN.RSTF = /RESET;

TAKTL = D2;
/TAKTL.CLKF = /SMPREG * /A7 * /A6;
TAKTL.SETF = /RESET;

TAKTH = D3;
/TAKTH.CLKF = /SMPREG * /A7 * /A6;
TAKTH.RSTF = /RESET;

EXTAKT = D4;
/EXTAKT.CLKF = /SMPREG * /A7 * /A6;
EXTAKT.RSTF = /RESET;

CLKDIRECT = EXTAKT;
/CLKDIRECT.CLKF = /SMPREG * /A7 * /A6;
CLKDIRECT.RSTF = /RESET;

/SWPROT = D0;
/SWPROT.CLKF = /SMPREG * /A7 * A6;
SWPROT.RSTF = /RESET;

SWRESFF = D1;
/SWRESFF.CLKF = /SMPREG * /A7 * A6;
SWRESFF.RSTF = /RESET;

;  REGMATZ: 00 = DMA-Record, 01 = D/A, 10 = DSP-Input

REGMATA = D2;
/REGMATA.CLKF = /SMPREG * /A7 * A6;
REGMATA.RSTF = /RESET;

REGMATZ0.T = REGMATA;
REGMATZ0.CLKF = /SMPREG * /A7 * A6;
REGMATZ0.RSTF = /REGMATA;

REGMATZ1.T = REGMATZ0;
REGMATZ1.CLKF = /SMPREG * /A7 * A6;
REGMATZ1.RSTF = /REGMATA;

/PREEMPH = D3;
/PREEMPH.CLKF = /SMPREG * /A7 * A6;
PREEMPH.SETF = /RESET;

SWSUBFR = D4;
/SWSUBFR.CLKF = /SMPREG * /A7 * A6;
SWSUBFR.RSTF = /RESET;

;  Quelle 00 = NC, 01 = DMA-Play, 10 = A/D, 11 = DSP-Output

DMAREC0 = D0;
/DMAREC0.CLKF = /SMPREG * A7 * /A6 * /REGMATZ1 * /REGMATZ0;
DMAREC0.RSTF = /RESET;

DMAREC1 = D1;
/DMAREC1.CLKF = /SMPREG * A7 * /A6 * /REGMATZ1 * /REGMATZ0;
DMAREC1.RSTF = /RESET;

DA0 = D0;
/DA0.CLKF = /SMPREG * A7 * /A6 * /REGMATZ1 * REGMATZ0;
DA0.RSTF = /RESET;

DA1 = D1;
/DA1.CLKF = /SMPREG * A7 * /A6 * /REGMATZ1 * REGMATZ0;
DA1.RSTF = /RESET;

DSPIN0 = D0;
/DSPIN0.CLKF = /SMPREG * A7 * /A6 * REGMATZ1 * /REGMATZ0;
DSPIN0.RSTF = /RESET;

DSPIN1 = D1;
/DSPIN1.CLKF = /SMPREG * A7 * /A6 * REGMATZ1 * /REGMATZ0;
DSPIN1.RSTF = /RESET;

REC4 = D0;
/REC4.CLKF = /SMPREG * A7 * /A6 * REGMATZ1 * REGMATZ0;
REC4.RSTF = /RESET;

PLAY4 = D1;
/PLAY4.CLKF = /SMPREG * A7 * /A6 * REGMATZ1 * REGMATZ0;
PLAY4.RSTF = /RESET;

VOLCLK = D3;
/VOLCLK.CLKF = /SMPREG * A7 * /A6;
VOLCLK.RSTF = /RESET;

VOLDATAI = D4;
/VOLDATAI.CLKF = /SMPREG * A7 * /A6;
VOLDATAI.RSTF = /RESET;

SWPROF = D0;
/SWPROF.CLKF = /SMPREG * A7 * A6;
SWPROF.RSTF = /RESET;

PCH16 = D1;
/PCH16.CLKF = /SMPREG * A7 * A6;
PCH16.RSTF = /RESET;

DIGMOD = D2;
/DIGMOD.CLKF = /SMPREG * A7 * A6;
DIGMOD.RSTF = /RESET;

SWMAL2.T = DIGMOD;
SWMAL2.CLKF = /SMPREG * A7 * A6;
SWMAL2.RSTF = /DIGMOD;

DIG24.T = SWMAL2;
DIG24.CLKF = /SMPREG * A7 * A6;
DIG24.RSTF = /DIGMOD;

PSWM128 = D3;
/PSWM128.CLKF = /SMPREG * A7 * A6;
PSWM128.RSTF = /RESET;

CHANNEL0.T = PSWM128;
CHANNEL0.CLKF = /SMPREG * A7 * A6;
CHANNEL0.RSTF = /PSWM128;

CHANNEL1.T = CHANNEL0;
CHANNEL1.CLKF = /SMPREG * A7 * A6;
CHANNEL1.RSTF = /PSWM128;

SWDSB = D4;
/SWDSB.CLKF = /SMPREG * A7 * A6;
SWDSB.RSTF = /RESET;

SUM24 = SWDSB;
/SUM24.CLKF = /SMPREG * A7 * A6;
SUM24.RSTF = /RESET;

; ---------------------Reseterzeugung

/RESRDFIFO = /RESET + SWRESFF;

; ---------------------Frequenzerzeugung 12.288 MHz fÅr A/D & D/A

MCLK12.T = VCC;
MCLK12.CLKF = MCLK24;

MCLK16.T = VCC;
MCLK16.CLKF = MCLK33;

VCLK = /EXTAKT * /TAKTH * /TAKTL * AESMCLKI
     + /EXTAKT * TAKTH * /TAKTL * MCLK33 * SWMAL2
     + /EXTAKT * TAKTL * MCLK24 * SWMAL2
     + /EXTAKT * TAKTH * /TAKTL * MCLK16 * /SWMAL2
     + /EXTAKT * TAKTL * MCLK12 * /SWMAL2
     + EXTAKT * EXTMCLK;

OUTCLK = VCLK * /PSWM128
       + VCLK * PSWM128 * /DIG24
       + VCLK * PSWM128 * DIG24 * /PCH16
       + ADCLK32 * PSWM128 * DIG24 * PCH16;

; ---------------------Frequenzerzeugung XTI/ICLKD fÅr D/A und A/D

SMPCLK = OUTCLK;

; ---------------------Taktumschaltung fÅr A/D und D/A-Samplerate
; ---bei ext. Takt kann Åber TAKTL zw. 256/384fach CLK gewÑhlt werden

CKS = /EXTAKT * /TAKTH * TAKTL
    + /EXTAKT * TAKTH * /TAKTL
    + EXTAKT * TAKTL;

; ---------------------Frequenzerzeugung fÅr A/D-Clock,Hold und L/R

ADCLKO = ADCLK32 * /PSWM128
       + /ADCLK * /ADLR * /HOLD * PSWM128;

AESCLKI = /ADCLK32 * /PSWM128
        + ADCLK * PSWM128;

ADCLK = DA_ACKO * SWAES * /CLKDIRECT
      + MCLK128 * /SWAES * /CLKDIRECT
      + VCLK * CLKDIRECT;

ADCLK32.T = VCC;
ADCLK32.CLKF = ADCLK;

ADCLK16.T = ADCLK32;
ADCLK16.CLKF = ADCLK;

TAKT5.T = ADCLK32 * ADCLK16;
TAKT5.CLKF = ADCLK;

TAKT6.T = ADCLK32 * ADCLK16 * TAKT5;
TAKT6.CLKF = ADCLK;

TAKT7.T = ADCLK32 * ADCLK16 * TAKT5 * TAKT6;
TAKT7.CLKF = ADCLK;

HOLD.T = ADCLK32 * ADCLK16 * TAKT5 * TAKT6 * TAKT7;
HOLD.CLKF = ADCLK;

ADLR.T = ADCLK32 * ADCLK16 * TAKT5 * TAKT6 * TAKT7 * HOLD;
ADLR.CLKF = ADCLK;

ADLROUT = ADLR * /PSWM128
        + /ADLR * /HOLD * /TAKT7 * PSWM128;

; ---------------------Eingangsdaten und Eingangstakt

CLKPLAY = /AESCLKI * /PSWM128 * /BYPMODE
        + AESCLKI * PSWM128 * /BYPMODE
        + ADLR * BYPMODE
        + CLKPLAY * WP2 * WP1 * WP0 * ZP2 * ZP1 * ZP0 * CBL * BYPMODE;

CLKREC =  AESCLKI;

; ---------------------Record

ZR0.T = VCC;
ZR0.CLKF = CLKREC;
ZR0.RSTF = RRESET;

ZR1.T = ZR0;
ZR1.CLKF = CLKREC;
ZR1.RSTF = RRESET;

ZR2.T = ZR0 * ZR1;
ZR2.CLKF = CLKREC;
ZR2.RSTF = RRESET;

WR0.T = ZR0 * ZR1 * ZR2;
WR0.CLKF = CLKREC;
WR0.RSTF = RRESET;

WR1.T = ZR0 * ZR1 * ZR2 * WR0;
WR1.CLKF = CLKREC;
WR1.RSTF = RRESET;

WR2.T = ZR0 * ZR1 * ZR2 * WR0 * WR1;
WR2.CLKF = CLKREC;
WR2.RSTF = RRESET;

WR3.T = ZR0 * ZR1 * ZR2 * WR0 * WR1 * WR2;
WR3.CLKF = CLKREC;
WR3.RSTF = RRESET;

WR4.T = ZR0 * ZR1 * ZR2 * WR0 * WR1 * WR2 * WR3;
WR4.CLKF = CLKREC;
WR4.RSTF = RRESET;

WR5.T = ZR0 * ZR1 * ZR2 * WR0 * WR1 * WR2 * WR3 * WR4;
WR5.CLKF = CLKREC;
WR5.RSTF = RRESET;

FSREC =  /WP2 * /PSWM128 * /DMAREC1 * DMAREC0
       + /WP3 * PSWM128 * /PCH16 * /DIG24 * /DMAREC1 * DMAREC0
       + /WP4 * PSWM128 * /PCH16 * DIG24 * /DMAREC1 * DMAREC0
       + /WP4 * PSWM128 * PCH16 * /DIG24 * /DMAREC1 * DMAREC0
       + /WP5 * PSWM128 * PCH16 * DIG24 * /DMAREC1 * DMAREC0
       + ADLROUT * DMAREC1 * /DMAREC0
       + ADLROUT * DMAREC1 * DMAREC0 * /DSPIN0
       + DA_FSYNC * /PSWM128 * DMAREC1 * DMAREC0 * DSPIN0
       + /WP3 * PSWM128 * /PCH16 * /DIG24 * DMAREC1 * DMAREC0 * DSPIN0
       + /WP4 * PSWM128 * /PCH16 * DIG24 * DMAREC1 * DMAREC0 * DSPIN0
       + /WP4 * PSWM128 * PCH16 * /DIG24 * DMAREC1 * DMAREC0 * DSPIN0
       + /WP5 * PSWM128 * PCH16 * DIG24 * DMAREC1 * DMAREC0 * DSPIN0;

RRESHLP = /WR5 * /WR4 * /WR3 * /WR2 * /WR1 * /WR0;

RRESET = VCC;
RRESET.CLKF = FSREC;
RRESET.RSTF = RRESHLP * /ZR2 * /ZR1 * /ZR0 * RRESET;

UDHELP =  WR1 * /WR0 * ZR2 * /SWAES * /DIG24 * SWDSB
        + WR1 * WR0 * ZR2 * /SWAES * DIG24 * SWDSB;

WD0 =  DAHLP * /DMAREC1 * DMAREC0 * /UDHELP
     + AESDATAI * /SWAES * DMAREC1 * /DMAREC0 * /UDHELP
     + ADATAI * SWAES * DMAREC1 * /DMAREC0 * /UDHELP
     + DSPSTD * DMAREC1 * DMAREC0 * /PSWM128 * /UDHELP
     + PDAT128 * DMAREC1 * DMAREC0 * PSWM128 * /UDHELP
     + UDHELP * ZR1 * ZR0 * CBL
     + UDHELP * ZR1 * /ZR0 * AESCIN
     + UDHELP * /ZR1 * ZR0 * USERDATA;
WD0.CLKF = CLKREC;

WD1 = WD0;
WD1.CLKF = CLKREC;

WD2 = WD1;
WD2.CLKF = CLKREC;

WD3 = WD2;
WD3.CLKF = CLKREC;

WD4 = WD3;
WD4.CLKF = CLKREC;

WD5 = WD4;
WD5.CLKF = CLKREC;

WD6 = WD5;
WD6.CLKF = CLKREC;

WD7 = WD6;
WD7.CLKF = CLKREC;

PUFWHLP = /WR1 * ZR2 * ZR1 * ZR0 * /PSWM128
        + WR1 * /WR0 * ZR2 * ZR1 * ZR0 * /PSWM128 * DIG24
        + WR1 * /WR0 * ZR2 * ZR1 * ZR0 * /PSWM128 * /DIG24 * SWDSB
        + WR1 * WR0 * ZR2 * ZR1 * ZR0 * /PSWM128 * DIG24 * SWDSB
        + ZR2 * ZR1 * ZR0 * PSWM128 * /DIG24
        + /WR1 * ZR2 * ZR1 * ZR0 * PSWM128 * DIG24
        + WR1 * /WR0 * ZR2 * ZR1 * ZR0 * PSWM128 * DIG24;

/PUFWR = PUFWHLP;
PUFWR.CLKF = /CLKREC;

WD8 = /WR2 * /PSWM128
    + /WR3 * /WR2 * /WR1 * WR0 * PSWM128 * /PCH16 * /DIG24
    + /WR4 * /WR3 * /WR2 * /WR1 * WR0 * PSWM128 * /PCH16 * DIG24
    + /WR4 * /WR3 * /WR2 * /WR1 * WR0 * PSWM128 * PCH16 * /DIG24
    + /WR5 * /WR4 * /WR3 * /WR2 * /WR1 * WR0 * PSWM128 * PCH16 * DIG24;

; ----Erkennung Category-Code und Prof/Consumermode fuer Digitalausgang
; ----Sample-Frequenzerkennung fÅr Status-Anzeige

BYPMODE = DA1 * /DA0
        + DA1 * DA0 * DSPIN1 * /DSPIN0;

AESC0 = AESCIN;
AESC0.CLKF = /WP2 * /WP1 * /WP0 * /ZP2 * /ZP1 * /ZP0 * CBL * BYPMODE;

AESC24 = AESCIN;
AESC24.CLKF = WSTART * BYPMODE;

AESC25 = AESCIN;
AESC25.CLKF = FREQCLK1 * BYPMODE;

FREQCLK1 = /WP2 * WP1 * WP0 * /ZP2 * ZP1 * /ZP0 * CBL * /AESC0
         + /WP2 * /WP1 * WP0 * /ZP2 * /ZP1 * /ZP0 * CBL * AESC0;

AESFREQ = AESC25 * /SWSUBFR
        + AESC24 * SWSUBFR;

; ---------------------Play

ZP0.T = /BYPMODE
      + CBL * BYPMODE;
ZP0.CLKF = CLKPLAY;
ZP0.RSTF = /CBL * BYPMODE;

ZP1.T = ZP0;
ZP1.CLKF = CLKPLAY;
ZP1.RSTF = /CBL * BYPMODE;

ZP2.T = ZP0 * ZP1;
ZP2.CLKF = CLKPLAY;
ZP2.RSTF = /CBL * BYPMODE;

WP0.T = ZP0 * ZP1 * ZP2;
WP0.CLKF = CLKPLAY;
WP0.RSTF = /CBL * BYPMODE;

WP1.T = ZP0 * ZP1 * ZP2 * WP0;
WP1.CLKF = CLKPLAY;
WP1.RSTF = /CBL * BYPMODE;

WP2.T = ZP0 * ZP1 * ZP2 * WP0 * WP1;
WP2.CLKF = CLKPLAY;
WP2.RSTF = /CBL * BYPMODE;

WP3.T = ZP0 * ZP1 * ZP2 * WP0 * WP1 * WP2;
WP3.CLKF = CLKPLAY;
WP3.RSTF = /CBL * BYPMODE;

WP4.T = ZP0 * ZP1 * ZP2 * WP0 * WP1 * WP2 * WP3;
WP4.CLKF = CLKPLAY;
WP4.RSTF = /CBL * BYPMODE;

WP5.T = ZP0 * ZP1 * ZP2 * WP0 * WP1 * WP2 * WP3 * WP4;
WP5.CLKF = CLKPLAY;
WP5.RSTF = /CBL * BYPMODE;

WSTART = /WP2 * /WP1 * /WP0 * /PSWM128 * /BYPMODE
       + /WP3 * /WP2 * /WP1 * /WP0 * PSWM128 * /PCH16 * /DIG24 * /BYPMODE
       + /WP4 * /WP3 * /WP2 * /WP1 * /WP0 * PSWM128 * /PCH16 * DIG24 * /BYPMODE
       + /WP4 * /WP3 * /WP2 * /WP1 * /WP0 * PSWM128 * PCH16 * /DIG24 * /BYPMODE
       + /WP5 * /WP4 * /WP3 * /WP2 * /WP1 * /WP0 * PSWM128 * PCH16 * DIG24 * /BYPMODE
       + /WP2 * WP1 * WP0 * /ZP2 * /ZP1 * ZP0 * CBL * /AESC0 * BYPMODE
       + /WP2 * /WP1 * /WP0 * ZP2 * ZP1 * ZP0 * CBL * AESC0 * BYPMODE;

WRESET = VCC;
WRESET.CLKF = /RP9 * RP8;
WRESET.RSTF = WSTART * ZP1;

/PUFRD = PUFRHLP;

PUFRHLP = WP1 * WP0 * ZP2 * ZP1 * ZP0 * /PSWM128 * /WRESET * /BYPMODE
        + /WP1 * /WP0 * ZP2 * ZP1 * ZP0 * /PSWM128 * /WRESET * /BYPMODE
        + /WP1 * WP0 * ZP2 * ZP1 * ZP0 * /PSWM128 * DIG24 * /WRESET * /BYPMODE
        + ZP2 * ZP1 * ZP0 * PSWM128 * /DIG24 * /WRESET * /BYPMODE
        + WP1 * WP0 * ZP2 * ZP1 * ZP0 * PSWM128 * DIG24 * /WRESET * /BYPMODE
        + /WP1 * ZP2 * ZP1 * ZP0 * PSWM128 * DIG24 * /WRESET * /BYPMODE;
PUFRHLP.CLKF = /CLKPLAY;

; RP8 ist Eingang fÅr Parity

PLAYCLKO = PUFRHLP * CLKPLAY;

RP9 = RP8;
RP9.CLKF = PLAYCLKI;

RP8 = RD8;
RP8.CLKF = PLAYCLKI;

RP7 := RD7;
RP7.CLKF = PLAYCLKI;

RP6 := RD6;
RP6.CLKF = PLAYCLKI;

RP5 := RD5;
RP5.CLKF = PLAYCLKI;

RP4 := RD4;
RP4.CLKF = PLAYCLKI;

RP3 := RD3;
RP3.CLKF = PLAYCLKI;

RP2 := RD2;
RP2.CLKF = PLAYCLKI;

RP1 := RD1;
RP1.CLKF = PLAYCLKI;

RP0 = RD0;
RP0.CLKF = PLAYCLKI;

; ---------------------SCLK fÅr D/A und Digital-Ausgang

DA_SHLP = CLKREC * DA1 * /DA0 * /PSWM128
        + /CLKREC * DA1 * DA0 * DSPIN1 * /DSPIN0 * /PSWM128
        + CLKPLAY * /PSWM128 * /DA1 * DA0
        + /CLKPLAY * DA1 * DA0 * DSPIN0 * /PSWM128
        + /ZP0 * PSWM128 * /PCH16 * /DIG24 * /BYPMODE
        + ZP1 * PSWM128 * /PCH16 * DIG24 * /BYPMODE
        + /ZP1 * PSWM128 * PCH16 * /DIG24 * /BYPMODE
        + /ZP2 * PSWM128 * PCH16 * DIG24 * /BYPMODE
        + /ZR0 * PSWM128 * BYPMODE;

DA_SCLK = DA_SHLP;

; ---------------------SDATA fÅr D/A und Digital-Ausgang

DAHLP = RP7 * /ZP2 * /ZP1 * /ZP0
      + RP6 * /ZP2 * /ZP1 * ZP0
      + RP5 * /ZP2 * ZP1 * /ZP0
      + RP4 * /ZP2 * ZP1 * ZP0
      + RP3 * ZP2 * /ZP1 * /ZP0
      + RP2 * ZP2 * /ZP1 * ZP0
      + RP1 * ZP2 * ZP1 * /ZP0
      + RP0 * ZP2 * ZP1 * ZP0
      + /WSTART * WRESET;

DA_SDATA = AESDATAI * /SWAES * DA1 * /DA0
         + ADATAI * SWAES * DA1 * /DA0
         + DAHLP * /DA1 * DA0 * /WP1 * /PSWM128
         + DAHLP * /DA1 * DA0 * WP1 * /WP0 * /PSWM128 * DIG24
         + DAHLP * /DA1 * DA0 * PSWM128
         + DSPSTD * DA1 * DA0 * DSPIN0
         + DSPSTD * DA1 * DA0 * DSPIN1 * /DSPIN0;

; ---------------------FSYNC fÅr D/A und Digital-Ausgang

FSHLP = WR2 * BYPMODE * /PSWM128
      + WR3 * WR2 * BYPMODE * PSWM128
      + /WR3 * /WR2 * BYPMODE * PSWM128;

FSHLP2 = WP3 * WP2 * /PCH16 * /DIG24 * /SUM24 * /CHANNEL1 * /CHANNEL0
       + /WP3 * /WP2 * /PCH16 * /DIG24 * /SUM24 * /CHANNEL1 * /CHANNEL0
       + /WP3 * /PCH16 * /DIG24 * /SUM24 * /CHANNEL1 * CHANNEL0
       + /WP3 * WP2 * /DIG24 * /PCH16 * /SUM24 * CHANNEL1 * /CHANNEL0
       + WP3 * /WP2 * /DIG24 * /PCH16 * /SUM24 * CHANNEL1 * /CHANNEL0
       + WP3 * /PCH16 * /DIG24 * /SUM24 * CHANNEL1 * CHANNEL0
       + WP3 * WP1 * /PCH16 * /DIG24 * SUM24
       + WP3 * WP2 * /PCH16 * /DIG24 * SUM24
       + /WP3 * /WP2 * /WP1 * /PCH16 * /DIG24 * SUM24
       + WP4 * WP2 * /PCH16 * DIG24
       + WP4 * WP3 * /PCH16 * DIG24
       + /WP4 * /WP3 * /WP2 * /PCH16 * DIG24
       + WP4 * WP3 * PCH16 * /DIG24 * /SUM24 * /CHANNEL1 * /CHANNEL0
       + /WP4 * /WP3 * PCH16 * /DIG24 * /SUM24 * /CHANNEL1 * /CHANNEL0
       + /WP4 * PCH16 * /DIG24 * /SUM24 * /CHANNEL1 * CHANNEL0
       + /WP4 * WP3 * PCH16 * /DIG24 * /SUM24 * CHANNEL1 * /CHANNEL0
       + WP4 * /WP3 * PCH16 * /DIG24 * /SUM24 * CHANNEL1 * /CHANNEL0
       + WP4 * PCH16 * /DIG24 * /SUM24 * CHANNEL1 * CHANNEL0
       + WP4 * WP2 * PCH16 * /DIG24 * SUM24
       + WP4 * WP3 * PCH16 * /DIG24 * SUM24
       + /WP4 * /WP3 * /WP2 * PCH16 * /DIG24 * SUM24
       + WP5 * WP4 * PCH16 * DIG24
       + WP5 * WP3 * PCH16 * DIG24
       + /WP5 * /WP4 * /WP3 * PCH16 * DIG24;

/DA_FSYNC = FSHLP
         + WP2 * /DA1 * DA0 * /PSWM128
         + WP2 * DA1 * DA0 * /PSWM128 * DSPIN0
         + FSHLP2 * PSWM128 * DA1 * DA0 * DSPIN0
         + /DA1 * /DA0 * CHANNEL0;

; ---------------------Digital-Ausgang CS8402

AESCLR = /WP2 * /WP1 * /WP0 * /ZP2 * /ZP1 * ZP0 * /AESC0
       + /WP2 * /WP1 * /WP0 * /ZP2 * ZP1 * /ZP0 * /AESC0
       + /WP2 * /WP1 * WP0 * /ZP2 * ZP1 * ZP0 * /AESC0
       + /WP2 * /WP1 * WP0 * ZP2 * /AESC0
       + /WP2 * WP1 * /WP0 * /ZP2 * /ZP1 * /ZP0 * /AESC0;

VAESCOUT = /WP2 * /WP1 * /WP0 * /ZP2 * ZP1 * ZP0 * /AESC0 * /SWAES * BYPMODE * /EXTAKT * /SWPROT
        + /WP2 * /WP1 * WP0 * /ZP2 * /ZP1 * ZP0 * /AESC0 * /SWAES * BYPMODE * /EXTAKT * /SWPROT
        + /WP2 * /WP1 * WP0 * /ZP2 * ZP1 * /ZP0 * /AESC0 * /SWAES * BYPMODE * /EXTAKT * /SWPROT
        + /SWAES * BYPMODE * /EXTAKT * AESCIN * /AESCLR * /SWPROT
        + /SWAES * BYPMODE * /EXTAKT * AESCIN * SWPROT;

AESCOUT = VAESCOUT;

MCLK128.T = VCC;
MCLK128.CLKF = AESMCLKI;

AESMCLKO = AESMCLKI * /SWAES * BYPMODE * /EXTAKT
         + DA_ACKO * /SWAES * BYPMODE * EXTAKT
         + DA_ACKO * SWAES * BYPMODE
         + DA_ACKO * /BYPMODE * TAKTL
         + DA_ACKO * /BYPMODE * TAKTH
         + DA_ACKO * /BYPMODE * /TAKTH * /TAKTL * EXTAKT
         + MCLK128 * /BYPMODE * /TAKTH * /TAKTL * /EXTAKT;

AESDATAO = AESDHLP;

AESDHLP = AESDATAI * /SWAES * DA1 * /DA0 * /REC4
        + ADATAI * SWAES * DA1 * /DA0 * /REC4
        + AESDATAI * DA1 * /DA0 * REC4
        + DAHLP * /DA1 * DA0 * /PLAY4
        + DSPSTD * DA1 * DA0 * DSPIN0
        + DSPSTD * DA1 * DA0 * DSPIN1 * /DSPIN0
        + DSPSTD * /DA1 * DA0 * PLAY4;

; ---------------------Umschaltung in Consumer-Mode fÅr A/D und PLAY

AESPRO = SWAES * /SWPROF * BYPMODE
       + /SWPROF * /BYPMODE
       + EXTAKT * /SWPROF;

AESFC0 = SWPROF
       + TAKTH * TAKTL
       + /TAKTH * /TAKTL * /AESC24 * AESC25;

VAESFC1 = /TAKTH * TAKTL * /SWPROF
        + /SWAES * BYPMODE * /EXTAKT
        + /TAKTH * /TAKTL * AESC24 * AESC25 * /SWPROF;

AESFC1 = VAESFC1;

; ---------------------DSP-Serial-Port

DSPSC1 = /WR2 * DSPIN1 * /DSPIN0 * /PSWM128
       + /WR3 * /WR2 * /WR1 * DSPIN1 * /DSPIN0 * PSWM128
       + /WP2 * DSPIN0 * /PSWM128
       + /WP3 * /WP2 * /WP1 * DSPIN0 * PSWM128 * /PCH16 * /DIG24
       + /WP4 * /WP3 * /WP2 * DSPIN0 * PSWM128 * /PCH16 * DIG24
       + /WP4 * /WP3 * /WP2 * /WP1 * DSPIN0 * PSWM128 * PCH16 * /DIG24
       + /WP5 * /WP4 * /WP3 * /WP2 * DSPIN0 * PSWM128 * PCH16 * DIG24;

DSPSC2 = /WR1 * /PSWM128 * DSPIN1 * /DSPIN0
       + WR1 * /WR0 * DIG24 * /PSWM128 * DSPIN1 * /DSPIN0
       + /WR3 * /WR2 * /WR1 * PSWM128 * DSPIN1 * /DSPIN0
       + /WP1 * DSPIN0 * /PSWM128
       + WP1 * /WP0 * DSPIN0 * /PSWM128 * DIG24
       + /WP3 * /WP2 * /WP1 * DSPIN0 * PSWM128 * /PCH16 * /DIG24
       + /WP4 * /WP3 * /WP2 * DSPIN0 * PSWM128 * /PCH16 * DIG24
       + /WP4 * /WP3 * /WP2 * /WP1 * DSPIN0 * PSWM128 * PCH16 * /DIG24
       + /WP5 * /WP4 * /WP3 * /WP2 * DSPIN0 * PSWM128 * PCH16 * DIG24;

VV = VCC;
VV.CLKF = /CLKPLAY * WP1 * /WP0 * ZP2 * ZP1 * ZP0;
VV.RSTF = /CLKPLAY * WP1 * WP0 * ZP2 * ZP1 * ZP0;

DSPSCK = CLKREC * DSPIN1 * /DSPIN0
       + CLKPLAY * DSPIN0 * /PSWM128
       + CLKPLAY * DSPIN0 * PSWM128 * /DIG24
       + CLKPLAY * DSPIN0 * PSWM128 * DIG24 * /VV;

DSPSRD = AESDATAI * /SWAES * DSPIN1 * /DSPIN0 * /REC4
       + ADATAI * SWAES * DSPIN1 * /DSPIN0 * /REC4
       + AESDATAI * DSPIN1 * /DSPIN0 * REC4
       + DAHLP * /DSPIN1 * DSPIN0
       + DSPSTD * DSPIN1 * DSPIN0;

;----------------------------------- Simulation Segment ------------
SIMULATION

;-------------------------------------------------------------------
