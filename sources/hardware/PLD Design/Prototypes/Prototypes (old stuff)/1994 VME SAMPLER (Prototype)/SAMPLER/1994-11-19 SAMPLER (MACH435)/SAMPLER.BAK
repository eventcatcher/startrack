;PALASM Design Description

;---------------------------------- Declaration Segment ------------
TITLE    SAMPLER.PDS - 16Bit-Soundsampler fuer VME-Bus
PATTERN  A
REVISION 1.0
AUTHOR   Stephan Wilhelm
COMPANY  Myself
DATE     11/19/94

CHIP  _sampler  MACH435

;---------------------------------- PIN Declarations ---------------
PIN  ?          HCLKI      ; 40MHz-Timingclock
PIN  ?          MCLK16     ; 16.934 MHz-Takt
PIN  ?          MCLK24     ; 24.576 MHz-Takt
PIN  ?          A6         ; VME-Adressleitung
PIN  ?          MACHCS     ; VME-Adressdekoder von SMPSEL
PIN  ?          DSPREG     ; von SMPSEL, /CS fÅr den DSP
PIN  ?          RESET      ; VME-RESET
PIN  ?          CBL        ; Channel Status Block des CS8412
PIN  ?          AESDATAI   ; SDATA des CS8412
PIN  ?          AESCIN     ; C des CS8412
PIN  ?          AESSYNCI   ; FSYNC des CS8412
PIN  ?          AESCLKI    ; SCK des 8412
PIN  ?          AESMCLKI   ; MCK des 8412
PIN  ?          RD0        ; Datenausgang des PLAY-FIFO
PIN  ?          RD1        ; Datenausgang des PLAY-FIFO
PIN  ?          RD2        ; Datenausgang des PLAY-FIFO
PIN  ?          RD3        ; Datenausgang des PLAY-FIFO
PIN  ?          RD4        ; Datenausgang des PLAY-FIFO
PIN  ?          RD5        ; Datenausgang des PLAY-FIFO
PIN  ?          RD6        ; Datenausgang des PLAY-FIFO
PIN  ?          RD7        ; Datenausgang des PLAY-FIFO
PIN  ?          RD8        ; Datenausgang des PLAY-FIFO
PIN  ?          ADATAI     ; SDATA des A/D-Wandlers CS5339
PIN  ?          DA_ACKO    ; ACKO des D/A-Wandlers (128x L/R-CLK)
PIN  ?          DSPSTD     ; SERIAL-DATA-Ausgang des DSP
PIN  ?          D0         ; VME-Datenleitung
PIN  ?          D1         ; VME-Datenleitung
PIN  ?          D2         ; VME-Datenleitung
PIN  ?          D3         ; VME-Datenleitung
PIN  ?          DSPSC0     COMBINATORIAL ; zum SC0-Eingang des DSP (FSYNC-32)
PIN  ?          DSPSC2     COMBINATORIAL ; zum SC2-Eingang des DSP (L/R-16)
PIN  ?          DSPSCK     COMBINATORIAL ; zum Clock-Eingang des DSP
PIN  ?          DSPSRD     COMBINATORIAL ; zum SERIAL-Read-Eingang des DSP
PIN  ?          CKS        COMBINATORIAL ; Master-Clock-SW des CS4328
PIN  ?          SMPCLK     COMBINATORIAL ; zum XTI des CS4328
PIN  ?          DA_VSDATA  COMBINATORIAL ; zum SDATAI des CS4328 (Delayed)
PIN  ?          OUTSCLKO   COMBINATORIAL ; zum SCLK des CS4328 und CS8402A
PIN  ?          AESFC0     COMBINATORIAL ; zum FC0 des CS8402A
PIN  ?          AESMCLKO   COMBINATORIAL ; zum MCK des CS8402A
PIN  ?          AESCOUT    COMBINATORIAL ; zum C/SBF des CS8402A
PIN  ?          AES_VDATAO COMBINATORIAL ; zum SDATA des CS8402A (Delayed)
PIN  ?          OUTFSYNC   COMBINATORIAL ; zum FSYNC des CS8402A und CS4328
PIN  ?          WD0        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          WD1        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          WD2        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          WD3        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          WD4        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          WD5        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          WD6        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          WD7        COMBINATORIAL ; zum Dateneingang des REC-FIFO
PIN  ?          PUFWR      COMBINATORIAL ; zum REC-FIFO Write
PIN  ?          PUFRD      COMBINATORIAL ; zum PLAY-FIFO Read
PIN  ?          RESRDFIFO  COMBINATORIAL ; RESET des REC-FIFO
PIN  ?          AD_DPD     COMBINATORIAL ; Quasi-RESET-Leitung des CS5339
PIN  ?          ADCLK32       REGISTERED ; 32BIT-CLK fÅr den CS5339
PIN  ?          ADLR          REGISTERED ; L/R fÅr den CS5339
PIN  ?          AESFCK        REGISTERED ; FCK fÅr den CS8412
PIN  ?          SWDIGIN       REGISTERED ; zum Relais OPTO/CINCH
PIN  ?          SWSUBFR       REGISTERED ; SEL fÅr den CS8412
PIN  ?          AESC24        REGISTERED ; Frequenz-Angabe durch CBL
PIN  ?          AESC25        REGISTERED ; Frequenz-Angabe durch CBL
NODE ?          AESDATAO   COMBINATORIAL ; SDATA (ohne Delay) fÅr CS8402A
NODE ?          INPSCLK    COMBINATORIAL ; Eingangstakt
NODE ?          INPSDATA   COMBINATORIAL ; Eingangsdaten
NODE ?          DATACLK    COMBINATORIAL ; Word-Erzeugung fÅr DSP
NODE ?          DAHLP      COMBINATORIAL ; SDATA-PLAY-Erzeugung
NODE ?          XGORES     COMBINATORIAL ; vorEnd RECFIFO-Write,del.Flankenreg
NODE ?          DA_SDATA   COMBINATORIAL ; SDATA-Ausgang (ohne Delay)
NODE ?          WRFERTIG   COMBINATORIAL ; beendet REC_FIFO Write-Timing
NODE ?          SHCLK      COMBINATORIAL ; Eingangstakt fÅr Shift-FSYNC
NODE ?          ADCLK16       REGISTERED ; 16BIT-CLK fÅr einen A/D-Wandler
NODE ?          HOLD          REGISTERED ; HOLD fÅr einen A/D-Wandler
NODE ?          SHD15         REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD14         REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD13         REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD12         REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD11         REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD10         REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD9          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD8          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD7          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD6          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD5          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD4          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD3          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD2          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD1          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          SHD0          REGISTERED ; Shift der seriellen Record-Daten
NODE ?          RP9           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP8           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP7           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP6           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP5           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP4           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP3           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP2           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP1           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          RP0           REGISTERED ; Speicher fÅr Daten-PlayFifo-Input
NODE ?          SH0           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH1           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH2           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH3           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH4           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH5           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH6           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH7           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH8           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH9           REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH10          REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH11          REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH12          REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH13          REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SH14          REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          SHSYNC        REGISTERED ; Shift von FSYNC-Input um 16Bit
NODE ?          TAKT5         REGISTERED ; Frequenz-Zwischenteiler fÅr A/D
NODE ?          TAKT6         REGISTERED ; Frequenz-Zwischenteiler fÅr A/D
NODE ?          TAKT7         REGISTERED ; Frequenz-Zwischenteiler fÅr A/D
NODE ?          SWAES         REGISTERED ; Zwischenspeicher/Schalter DIGI/ANA
NODE ?          SWDIGOUT      REGISTERED ; Zwischensp./Schalter Ausg.IN/PLAY
NODE ?          SWPROT        REGISTERED ; Zwischenspeicher/Schalter SCMS
NODE ?          SWONDSP       REGISTERED ; Zwischensp./Schalter DSP an/aus
NODE ?          SWINDSP       REGISTERED ; Zwischensp./Schalter DSP in/out
NODE ?          SWRESFF       REGISTERED ; Schalter/Auslîser Reset fÅr RecFIFO
NODE ?          TAKTL         REGISTERED ; Zwischenspeicher/Schalter SMPrate
NODE ?          TAKTH         REGISTERED ; Zwischenspeicher/Schalter SMPrate
NODE ?          WAIT          REGISTERED ; Record-FIFO-Write-Timing
NODE ?          WAIT2         REGISTERED ; Record-FIFO-Write-Timing
NODE ?          WAIT3         REGISTERED ; Record-FIFO-Write-Timing
NODE ?          WAIT4         REGISTERED ; Record-FIFO-Write-Timing
NODE ?          WAIT5         REGISTERED ; Record-FIFO-Write-Timing
NODE ?          BWAIT         REGISTERED ; Play-FIFO-Read-Timing
NODE ?          BWAIT2        REGISTERED ; Play-FIFO-Read-Timing
NODE ?          BWAIT3        REGISTERED ; Play-FIFO-Read-Timing
NODE ?          FVHLP1        REGISTERED ; D/A-Data Delaytiming
NODE ?          FVHLP2        REGISTERED ; D/A-Data Delaytiming
NODE ?          FVHLP3        REGISTERED ; D/A-Data Delaytiming
NODE ?          SVHLP1        REGISTERED ; Digital-Data Delaytiming
NODE ?          SVHLP2        REGISTERED ; Digital-Data Delaytiming
NODE ?          SVHLP3        REGISTERED ; Digital-Data Delaytiming
NODE ?          SVHLP4        REGISTERED ; Digital-Data Delaytiming
NODE ?          Z0            REGISTERED ; Play-SDATAzÑhler und Synchro
NODE ?          Z1            REGISTERED ; Play-SDATAzÑhler und Synchro
NODE ?          Z2            REGISTERED ; Play-SDATAzÑhler und Synchro
NODE ?          Z3            REGISTERED ; Play-SDATAzÑhler und Synchro
NODE ?          Z4            REGISTERED ; Play-SDATAzÑhler und Synchro
NODE ?          Z5            REGISTERED ; Play-SDATAzÑhler und Synchro
NODE ?          CZ0           REGISTERED ; Channel-Status DatenzÑhler
NODE ?          CZ1           REGISTERED ; Channel-Status DatenzÑhler
NODE ?          CZ2           REGISTERED ; Channel-Status DatenzÑhler
NODE ?          CZ3           REGISTERED ; Channel-Status DatenzÑhler
NODE ?          CZ4           REGISTERED ; Channel-Status DatenzÑhler
NODE ?          CZ5           REGISTERED ; Channel-Status DatenzÑhler
NODE ?          PGO           REGISTERED ; Flanken-Erkenner fÅr pos.Flanke
NODE ?          NGO           REGISTERED ; Flanken-Erkenner fÅr neg.Flanke
NODE ?          MCLK12        REGISTERED ; fÅr Frequenzerzeugung

;----------------------------------- Boolean Equation Segment ------
EQUATIONS

; ---------------------Register

SWONDSP = D0;
SWONDSP.CLKF = DSPREG;
SWONDSP.RSTF = /RESET;
SWONDSP.SETF = GND;

SWINDSP = D1;
SWINDSP.CLKF = DSPREG;
SWINDSP.RSTF = /RESET;
SWINDSP.SETF = GND;

SWAES = D0;
/SWAES.CLKF = /MACHCS * /A6;
SWAES.RSTF = /RESET;
SWAES.SETF = GND;

SWDIGIN = D1;
/SWDIGIN.CLKF = /MACHCS * /A6;
SWDIGIN.RSTF = /RESET;
SWDIGIN.SETF = GND;

TAKTL = D2;
/TAKTL.CLKF = /MACHCS * /A6;
TAKTL.RSTF = /RESET;
TAKTL.SETF = GND;

TAKTH = D3;
/TAKTH.CLKF = /MACHCS * /A6;
TAKTH.RSTF = /RESET;
TAKTH.SETF = GND;

SWPROT = D0;
/SWPROT.CLKF = /MACHCS * A6;
SWPROT.RSTF = /RESET;
SWPROT.SETF = GND;

SWRESFF = D1;
/SWRESFF.CLKF = /MACHCS * A6;
SWRESFF.RSTF = /RESET;
SWRESFF.SETF = GND;

SWDIGOUT = D2;
/SWDIGOUT.CLKF = /MACHCS * A6;
SWDIGOUT.RSTF = /RESET;
SWDIGOUT.SETF = GND;

SWSUBFR = D3;
/SWSUBFR.CLKF = /MACHCS * A6;
SWSUBFR.RSTF = /RESET;
SWSUBFR.SETF = GND;

; ---------------------Frequenzerkennung von CD und DAT

CZ0.T = CBL;
CZ0.CLKF = AESSYNCI;
CZ0.RSTF = /CBL;
CZ0.SETF = GND;

CZ1.T = CZ0 * CBL;
CZ1.CLKF = AESSYNCI;
CZ1.RSTF = /CBL;
CZ1.SETF = GND;

CZ2.T = CZ0 * CZ1 * CBL
CZ2.CLKF = AESSYNCI;
CZ2.RSTF = /CBL;
CZ2.SETF = GND;

CZ3.T = CZ0 * CZ1 * CZ2 * CBL
CZ3.CLKF = AESSYNCI;
CZ3.RSTF = /CBL;
CZ3.SETF = GND;

CZ4.T = CZ0 * CZ1 * CZ2 * CZ3 * CBL
CZ4.CLKF = AESSYNCI;
CZ4.RSTF = /CBL;
CZ4.SETF = GND;

CZ5.T = CZ0 * CZ1 * CZ2 * CZ3 * CZ4 * CBL
CZ5.CLKF = AESSYNCI;
CZ5.RSTF = /CBL;
CZ5.SETF = GND;

AESC25 = AESCIN;
AESC25.CLKF = /CZ5 * CZ4 * CZ3 * /CZ2 * /CZ1 * CZ0 * CBL;
AESC25.RSTF = GND;
AESC25.SETF = GND;

AESC24 = AESCIN;
AESC24.CLKF = /CZ5 * CZ4 * CZ3 * /CZ2 * CZ1 * /CZ0 * CBL;
AESC24.RSTF = GND;
AESC24.SETF = GND;

; ---------------------Reseterzeugung

AD_DPD = /RESET;

/RESRDFIFO = /RESET + SWRESFF;

; ---------------------Frequenzerzeugung 6.144 MHz und XTI fÅr A/D und D/A

MCLK12.T = VCC;
MCLK12.CLKF = MCLK24;
MCLK12.SETF = GND;
MCLK12.RSTF = GND;

AESFCK.T = MCLK12;
AESFCK.CLKF = MCLK24;
AESFCK.SETF = GND;
AESFCK.RSTF = GND;

SMPCLK = /TAKTH * /TAKTL * AESMCLKI
       + /TAKTH * TAKTL * MCLK12
       + TAKTH * /TAKTL * MCLK16
       + TAKTH * TAKTL * MCLK12;

; ---------------------Taktumschaltung fÅr A/D und D/A-Samplerate

CKS = /TAKTH * TAKTL
    + TAKTH * /TAKTL;

; ---------------------Frequenzerzeugung fÅr A/D-Clock,Hold und L/R

ADCLK32.T = VCC;
ADCLK32.CLKF = DA_ACKO;
ADCLK32.RSTF = GND;
ADCLK32.SETF = GND;

ADCLK16.T = ADCLK32;
ADCLK16.CLKF = DA_ACKO;
ADCLK16.RSTF = GND;
ADCLK16.SETF = GND;

TAKT5.T = ADCLK32 * ADCLK16;
TAKT5.CLKF = DA_ACKO;
TAKT5.RSTF = GND;
TAKT5.SETF = GND;

TAKT6.T = ADCLK32 * ADCLK16 * TAKT5;
TAKT6.CLKF = DA_ACKO;
TAKT6.RSTF = GND;
TAKT6.SETF = GND;

TAKT7.T = ADCLK32 * ADCLK16 * TAKT5 * TAKT6;
TAKT7.CLKF = DA_ACKO;
TAKT7.RSTF = GND;
TAKT7.SETF = GND;

HOLD.T = ADCLK32 * ADCLK16 * TAKT5 * TAKT6 * TAKT7;
HOLD.CLKF = DA_ACKO;
HOLD.RSTF = GND;
HOLD.SETF = GND;

/ADLR.T = ADCLK32 * ADCLK16 * TAKT5 * TAKT6 * TAKT7 * HOLD;
ADLR.CLKF = DA_ACKO;
ADLR.RSTF = GND;
ADLR.SETF = GND;

; ---------------------Eingangsdaten und Eingangstakt

INPSCLK = AESCLKI * /SWAES
        + /ADCLK32 * SWAES;

INPSDATA = AESDATAI * /SWAES
         + ADATAI * SWAES;

; ---------------------Shift der FSYNC-Flanken(und dadurch der Daten)um 16Bit

SHCLK = /AESCLKI * /SWAES
      + ADCLK32 * SWAES;

SH0 = AESSYNCI * /SWAES
    + ADLR * SWAES;
SH0.CLKF = SHCLK;
SH0.SETF = GND;
SH0.RSTF = GND;

SH1 = SH0;
SH1.CLKF = SHCLK;
SH1.SETF = GND;
SH1.RSTF = GND;

SH2 = SH1;
SH2.CLKF = SHCLK;
SH2.SETF = GND;
SH2.RSTF = GND;

SH3 = SH2;
SH3.CLKF = SHCLK;
SH3.SETF = GND;
SH3.RSTF = GND;

SH4 = SH3;
SH4.CLKF = SHCLK;
SH4.SETF = GND;
SH4.RSTF = GND;

SH5 = SH4;
SH5.CLKF = SHCLK;
SH5.SETF = GND;
SH5.RSTF = GND;

SH6 = SH5;
SH6.CLKF = SHCLK;
SH6.SETF = GND;
SH6.RSTF = GND;

SH7 = SH6;
SH7.CLKF = SHCLK;
SH7.SETF = GND;
SH7.RSTF = GND;

SH8 = SH7;
SH8.CLKF = SHCLK;
SH8.SETF = GND;
SH8.RSTF = GND;

SH9 = SH8;
SH9.CLKF = SHCLK;
SH9.SETF = GND;
SH9.RSTF = GND;

SH10 = SH9;
SH10.CLKF = SHCLK;
SH10.SETF = GND;
SH10.RSTF = GND;

SH11 = SH10;
SH11.CLKF = SHCLK;
SH11.SETF = GND;
SH11.RSTF = GND;

SH12 = SH11;
SH12.CLKF = SHCLK;
SH12.SETF = GND;
SH12.RSTF = GND;

SH13 = SH12;
SH13.CLKF = SHCLK;
SH13.SETF = GND;
SH13.RSTF = GND;

SH14 = SH13;
SH14.CLKF = SHCLK;
SH14.SETF = GND;
SH14.RSTF = GND;

/SHSYNC = SH14;
SHSYNC.CLKF = SHCLK;
SHSYNC.SETF = GND;
SHSYNC.RSTF = GND;

; ---------------------Fsync-Flankenerkennung (erzeugt positive SprÅnge)

PGO = VCC;
PGO.CLKF = AESSYNCI;
PGO.SETF = GND;
PGO.RSTF = /XGORES;

NGO = VCC;
/NGO.CLKF = AESSYNCI;
NGO.SETF = GND;
NGO.RSTF = /XGORES;

; ---------------------Record

SHD0 = INPSDATA * /SWONDSP
     + INPSDATA * SWINDSP
     + DSPSTD * SWONDSP * /SWINDSP;
SHD0.CLKF = /INPSCLK;
SHD0.SETF = GND;
SHD0.RSTF = GND;

SHD1 = SHD0;
SHD1.CLKF = /INPSCLK;
SHD1.SETF = GND;
SHD1.RSTF = GND;

SHD2 = SHD1;
SHD2.CLKF = /INPSCLK;
SHD2.SETF = GND;
SHD2.RSTF = GND;

SHD3 = SHD2;
SHD3.CLKF = /INPSCLK;
SHD3.SETF = GND;
SHD3.RSTF = GND;

SHD4 = SHD3;
SHD4.CLKF = /INPSCLK;
SHD4.SETF = GND;
SHD4.RSTF = GND;

SHD5 = SHD4;
SHD5.CLKF = /INPSCLK;
SHD5.SETF = GND;
SHD5.RSTF = GND;

SHD6 = SHD5;
SHD6.CLKF = /INPSCLK;
SHD6.SETF = GND;
SHD6.RSTF = GND;

SHD7 = SHD6;
SHD7.CLKF = /INPSCLK;
SHD7.SETF = GND;
SHD7.RSTF = GND;

SHD8 = SHD7;
SHD8.CLKF = /INPSCLK;
SHD8.SETF = GND;
SHD8.RSTF = GND;

SHD9 = SHD8;
SHD9.CLKF = /INPSCLK;
SHD9.SETF = GND;
SHD9.RSTF = GND;

SHD10 = SHD9;
SHD10.CLKF = /INPSCLK;
SHD10.SETF = GND;
SHD10.RSTF = GND;

SHD11 = SHD10;
SHD11.CLKF = /INPSCLK;
SHD11.SETF = GND;
SHD11.RSTF = GND;

SHD12 = SHD11;
SHD12.CLKF = /INPSCLK;
SHD12.SETF = GND;
SHD12.RSTF = GND;

SHD13 = SHD12;
SHD13.CLKF = /INPSCLK;
SHD13.SETF = GND;
SHD13.RSTF = GND;

SHD14 = SHD13;
SHD14.CLKF = /INPSCLK;
SHD14.SETF = GND;
SHD14.RSTF = GND;

SHD15 = SHD14;
SHD15.CLKF = /INPSCLK;
SHD15.SETF = GND;
SHD15.RSTF = GND;

WAIT = PGO + NGO;
WAIT.CLKF = HCLKI;
WAIT.RSTF = WRFERTIG;
WAIT.SETF = GND;

WAIT2 = WAIT;
WAIT2.CLKF = HCLKI;
WAIT2.RSTF = WRFERTIG;
WAIT2.SETF = GND;

WAIT3 = WAIT2;
WAIT3.CLKF = HCLKI;
WAIT3.RSTF = WRFERTIG;
WAIT3.SETF = GND;

WAIT4 = WAIT3;
WAIT4.CLKF = HCLKI;
WAIT4.RSTF = WRFERTIG;
WAIT4.SETF = GND;

WAIT5 = WAIT4;
WAIT5.CLKF = HCLKI;
WAIT5.RSTF = WRFERTIG;
WAIT5.SETF = GND;

WRFERTIG = /PGO * /NGO * WAIT * WAIT2 * WAIT3 * WAIT4 * WAIT5 * PUFWR
        + /RESET;

/PUFWR = PGO * WAIT * /WAIT2
       + NGO * WAIT * /WAIT2
       + PGO * WAIT * WAIT2 * WAIT3 * WAIT4 * /WAIT5
       + NGO * WAIT * WAIT2 * WAIT3 * WAIT4 * /WAIT5;

/XGORES = PGO * WAIT * WAIT2 * WAIT3 * WAIT4 * WAIT5 * PUFWR
        + NGO * WAIT * WAIT2 * WAIT3 * WAIT4 * WAIT5 * PUFWR
        + /RESET;

WD0 = SHD8 * PGO * /WAIT3
    + SHD8 * NGO * /WAIT3
    + SHD0 * PGO * WAIT3
    + SHD0 * NGO * WAIT3;

WD1 = SHD9 * PGO * /WAIT3
    + SHD9 * NGO * /WAIT3
    + SHD1 * PGO * WAIT3
    + SHD1 * NGO * WAIT3;

WD2 = SHD10 * PGO * /WAIT3
    + SHD10 * NGO * /WAIT3
    + SHD2 * PGO * WAIT3
    + SHD2 * NGO * WAIT3;

WD3 = SHD11 * PGO * /WAIT3
    + SHD11 * NGO * /WAIT3
    + SHD3 * PGO * WAIT3
    + SHD3 * NGO * WAIT3;

WD4 = SHD12 * PGO * /WAIT3
    + SHD12 * NGO * /WAIT3
    + SHD4 * PGO * WAIT3
    + SHD4 * NGO * WAIT3;

WD5 = SHD13 * PGO * /WAIT3
    + SHD13 * NGO * /WAIT3
    + SHD5 * PGO * WAIT3
    + SHD5 * NGO * WAIT3;

WD6 = SHD14 * PGO * /WAIT3
    + SHD14 * NGO * /WAIT3
    + SHD6 * PGO * WAIT3
    + SHD6 * NGO * WAIT3;

WD7 = SHD15 * PGO * /WAIT3
    + SHD15 * NGO * /WAIT3
    + SHD7 * PGO * WAIT3
    + SHD7 * NGO * WAIT3;

;      WD8 = AESSYNCI, ist doch logisch;

; ---------------------Play

Z0.T = VCC;
Z0.CLKF = OUTSCLKO;
Z0.RSTF = /RESET;
Z0.SETF = GND;

Z1.T = Z0;
Z1.CLKF = OUTSCLKO;
Z1.RSTF = /RESET;
Z1.SETF = GND;

Z2.T = Z0 * Z1;
Z2.CLKF = OUTSCLKO;
Z2.RSTF = /RESET;
Z2.SETF = GND;

Z3.T = Z0 * Z1 * Z2;
Z3.CLKF = OUTSCLKO;
Z3.RSTF = /RESET;
Z3.SETF = GND;

Z4.T = Z0 * Z1 * Z2 * Z3;
Z4.CLKF = OUTSCLKO;
Z4.RSTF = /RESET;
Z4.SETF = GND;

Z5.T = Z0 * Z1 * Z2 * Z3 * Z4;
Z5.CLKF = OUTSCLKO;
Z5.RSTF = /RESET;
Z5.SETF = GND;

BWAIT = VCC;
BWAIT.CLKF = HCLKI;
BWAIT.RSTF = PUFRD;
BWAIT.SETF = GND;

BWAIT2 = BWAIT;
BWAIT2.CLKF = HCLKI;
BWAIT2.RSTF = PUFRD;
BWAIT2.SETF = GND;

BWAIT3 = BWAIT2;
BWAIT3.CLKF = HCLKI;
BWAIT3.RSTF = PUFRD;
BWAIT3.SETF = GND;

/PUFRD = /Z4 * Z3 * Z2 * /Z1 * /RP8 * /RP9 * /Z5
       + /Z4 * Z3 * Z2 * /Z1 * RP8 * RP9 * Z5
       + Z4 * Z3 * /Z2 * /Z1 * RP8 * /RP9 * /Z5
       + Z4 * Z3 * /Z2 * /Z1 * /RP8 * RP9 * Z5
       + /PUFRD * /Z4 * Z3 * Z2 * /Z1
       + /PUFRD * Z4 * Z3 * /Z2 * /Z1;

; RP8 ist Eingang fÅr Parity

RP9 = RP8;
RP9.CLKF = BWAIT3 * /PUFRD;
RP9.SETF = GND;
RP9.RSTF = GND;

RP8 = RD8;
RP8.CLKF = BWAIT3 * /PUFRD;
RP8.SETF = GND;
RP8.RSTF = GND;

RP7 = RD7;
RP7.CLKF = BWAIT3 * /PUFRD;
RP7.SETF = GND;
RP7.RSTF = GND;

RP6 = RD6;
RP6.CLKF = BWAIT3 * /PUFRD;
RP6.SETF = GND;
RP6.RSTF = GND;

RP5 = RD5;
RP5.CLKF = BWAIT3 * /PUFRD;
RP5.SETF = GND;
RP5.RSTF = GND;

RP4 = RD4;
RP4.CLKF = BWAIT3 * /PUFRD;
RP4.SETF = GND;
RP4.RSTF = GND;

RP3 = RD3;
RP3.CLKF = BWAIT3 * /PUFRD;
RP3.SETF = GND;
RP3.RSTF = GND;

RP2 = RD2;
RP2.CLKF = BWAIT3 * /PUFRD;
RP2.SETF = GND;
RP2.RSTF = GND;

RP1 = RD1;
RP1.CLKF = BWAIT3 * /PUFRD;
RP1.SETF = GND;
RP1.RSTF = GND;

RP0 = RD0;
RP0.CLKF = BWAIT3 * /PUFRD;
RP0.SETF = GND;
RP0.RSTF = GND;

; ---------------------SCLK,SDATA,FSYNC fÅr D/A und Digital-Ausgang

OUTSCLKO = INPSCLK * /SWDIGOUT
         + INPSCLK * SWDIGOUT * /SWAES
         + ADCLK32 * SWDIGOUT * SWAES;

DAHLP = RP7 * Z4 * /Z2 * /Z1 * /Z0 * SWDIGOUT
      + RP6 * Z4 * /Z2 * /Z1 * Z0 * SWDIGOUT
      + RP5 * Z4 * /Z2 * Z1 * /Z0 * SWDIGOUT
      + RP4 * Z4 * /Z2 * Z1 * Z0 * SWDIGOUT
      + RP3 * Z4 * Z2 * /Z1 * /Z0 * SWDIGOUT
      + RP2 * Z4 * Z2 * /Z1 * Z0 * SWDIGOUT
      + RP1 * Z4 * Z2 * Z1 * /Z0 * SWDIGOUT
      + RP0 * Z4 * Z2 * Z1 * Z0 * SWDIGOUT;

DA_SDATA = INPSDATA * /SWDIGOUT * /SWINDSP
         + INPSDATA * /SWDIGOUT * /SWONDSP
         + DAHLP * /SWINDSP
         + DAHLP * /SWONDSP
         + DSPSTD * SWONDSP * SWINDSP;

OUTFSYNC = AESSYNCI * /SWDIGOUT
         + Z5 * SWDIGOUT;

; ---------------------Delay fÅr D/A-Datenausgang

FVHLP1 = DA_SDATA;
FVHLP1.CLKF = MCLK24;
FVHLP1.SETF = GND;
FVHLP1.RSTF = GND;

FVHLP2 = FVHLP1;
FVHLP2.CLKF = MCLK24;
FVHLP2.SETF = GND;
FVHLP2.RSTF = GND;

FVHLP3 = FVHLP2;
FVHLP3.CLKF = MCLK24;
FVHLP3.SETF = GND;
FVHLP3.RSTF = GND;

DA_VSDATA = DA_SDATA * /SWDIGOUT
          + FVHLP3 * SWDIGOUT;

; ---------------------Digital-Ausgang CS8402

AESCOUT = /CZ2 * CZ1 * CZ0 * CBL * SWPROT * /SWAES * /SWDIGOUT
         + AESCIN * /SWAES * /SWDIGOUT;

AESDATAO = AESSYNCI * SHSYNC * AESDATAI * /SWAES * /SWDIGOUT
         + /AESSYNCI * /SHSYNC * AESDATAI * /SWAES * /SWDIGOUT
         + ADATAI * SWAES * /SWDIGOUT
         + DA_SDATA * SWDIGOUT;

AESMCLKO = AESMCLKI * /SWAES * /SWDIGOUT
         + DA_ACKO * SWAES * /SWDIGOUT
         + DA_ACKO * SWDIGOUT;

; ---------------------Delay fÅr Digital-Datenausgang

SVHLP1 = AESDATAO;
SVHLP1.CLKF = HCLKI;
SVHLP1.SETF = GND;
SVHLP1.RSTF = GND;

SVHLP2 = SVHLP1;
SVHLP2.CLKF = HCLKI;
SVHLP2.SETF = GND;
SVHLP2.RSTF = GND;

SVHLP3 = SVHLP2;
SVHLP3.CLKF = HCLKI;
SVHLP3.SETF = GND;
SVHLP3.RSTF = GND;

SVHLP4 = SVHLP3;
SVHLP4.CLKF = HCLKI;
SVHLP4.SETF = GND;
SVHLP4.RSTF = GND;

AES_VDATAO = SVHLP4;

; ---------------------Umschaltung in CD-Submode

AESFC0 = TAKTH * /TAKTL * SWAES * /SWDIGOUT
       + TAKTH * /TAKTL * SWDIGOUT;

; ---------------------Word-Erzeugung fÅr DSP-Eingang

DATACLK = AESSYNCI * SHSYNC * /SWAES
        + /AESSYNCI * /SHSYNC * /SWAES
        + ADLR * SHSYNC * SWAES
        + /ADLR * /SHSYNC * SWAES;

; ---------------------DSP-Serial-Port

DSPSC0 = AESSYNCI * SWONDSP * /SWINDSP
       + AESSYNCI * /SWDIGOUT * SWONDSP * SWINDSP
       + Z5 * SWDIGOUT * SWONDSP * SWINDSP;

DSPSC2 = DATACLK * SWONDSP * /SWINDSP
       + DATACLK * /SWDIGOUT * SWONDSP * SWINDSP
       + Z4 * SWDIGOUT * SWONDSP * SWINDSP;

DSPSCK = INPSCLK * SWONDSP * /SWINDSP
       + INPSCLK * /SWDIGOUT * SWONDSP * SWINDSP
       + INPSCLK * SWDIGOUT * /SWAES * SWONDSP * SWINDSP
       + ADCLK32 * SWDIGOUT * SWAES * SWONDSP * SWINDSP;

DSPSRD = INPSDATA * SWONDSP * /SWINDSP
       + INPSDATA * /SWDIGOUT * SWONDSP * SWINDSP
       + DAHLP * SWONDSP * SWINDSP;

;----------------------------------- Simulation Segment ------------
SIMULATION

;-------------------------------------------------------------------
