-- Advanced Micro Devices MACH355 144 Pin PQFP BSDL description
--
-- Written By:  Mark Moyer
-- Date:  February 28, 1994
-- Version 1.1
--
-- ****************************************************************
-- *  Copywrite 1993, Advanced Micro Devices                      *
-- *  All rights reserved.  No part of this program or publication*
-- *  may be reproduced, transmitted, transcribed, stored in a    *
-- *  retrieval system, or translated into any language or        *
-- *  computer language, in any form or by any means without this *
-- *  notice appearing within.                                    *
-- *  5900 E. Ben White Blvd.,  Austin, Texas 78741               *
-- ****************************************************************
-- *  Advanced Micro Devices makes no warranty for the use of this*
-- *  product and assumes no responsibility for any errors which  *
-- *  may appear within.  Neither does it make a committment to   *
-- *  update this information.                                    *
-- ****************************************************************
-- *  This is the template BSDL file for the MACH355 to be used   *
-- *  for the purpose of verifying the parts compliance with the  *
-- *  IEEE standard 1149.1-1990.  The BSDL languange is not at    *
-- *  this time a standard and IEEE holds no opinion on it or its *
-- *  use.  It has been submitted as a proposed addition to the   *
-- *  standard and should be voted on by the working committee    *
-- *  this year.                                                  *
-- ****************************************************************
--
--  This file has been verified by:
--     Teradyne VICTORY v 2.10
--         - Syntax Check using BSA
--         - Test vector generation using BSA
--
--     Hewlett-Packard Boundary-Scan Software
--         - Syntax Check
--
--     Genrad Boundary-Scan Software
--         - Syntax Check
--

entity AMD_MACH355 is

	generic(PHYSICAL_PIN_MAP : string := "PQFP_144pin");

	port    (
		DED_IN  : in    bit_vector(0 to 5);  --  Clocks/Inputs
		IO              : inout bit_vector(0 to 95);  --  I/O pins

		TCK, TMS, TDI, TRST: in  bit;   --  JTAG inputs
		TDO             : out bit;      --  JTAG outputs
		ENABLEB         : linkage bit;  --  Program Enable pin

		VCC             : linkage bit_vector(0 to 15);
		GND             : linkage bit_vector(0 to 19)
		);

	use STD_1149_1_1990.all;  -- get JTAG definitions and attributes

	attribute PIN_MAP of AMD_MACH355 : entity is PHYSICAL_PIN_MAP;

	constant PQFP_144pin :  PIN_MAP_STRING :=
		"DED_IN:(8,9,78,100,101,6), " &  -- Dedicated Clock/Input Pins
		"IO:(129,130,131,132,133,134,136,137,  " &  --  I/O A0-A7
		" 139,140,141,142,144,  1,  2,  3, " &  --  I/O A8-A15
		"  10, 11, 13, 14, 16, 17, 18, 19, " &  --  I/O B15-B8
		"  20, 21, 24, 25, 26, 27, 28, 29, " &  --  I/O B0-B7 
		"  34, 35, 36, 37, 39, 40, 41, 42, " &  --  I/O C15-C8
		"  44, 45, 47, 48, 49, 50, 51, 52, " &  --  I/O C7-C0 
		"  57, 58, 59, 60, 61, 62, 64, 65, " &  --  I/O D0-D7
		"  67, 68, 69, 70, 72, 73, 74, 75, " &  --  I/O D8-D15
       "  80, 81, 82, 83, 84, 85, 88, 89, " &  --  I/O E7-E0
       "  90, 91, 92, 93, 95, 96, 98, 99, " &  --  I/O E8-E15
       " 106,107,108,109,111,112,113,114, " &  --  I/O F15-F8
       " 116,117,119,120,121,122,123,124)," &  --  I/O F7-F0

		"ENABLEB:77, " & 
		"TDI:5, TMS:31, TCK:32, TRST:103, TDO:104, " &  --  JTAG

		"VCC:(4,12,22,33,43,53,56,66, " &  --  POWER
       " 76,87,97,105,115,125,128,138), "&  -- POWER
		"GND:(7,15,23,30,38,46,54,55, " &  --  GROUND PINS
       " 63,71,79,86,94,102, " &  -- GROUND PINS
		" 110,118,126,127,135,143)";  -- END OF PIN DEFINITION

	attribute TAP_SCAN_IN   of TDI : signal is true;
	attribute TAP_SCAN_MODE of TMS : signal is true;
	attribute TAP_SCAN_OUT  of TDO : signal is true;
	attribute TAP_SCAN_RESET of TRST : signal is true;
	attribute TAP_SCAN_CLOCK of TCK: signal is (20.0e6, BOTH);

--  Instruction register definitions

	attribute INSTRUCTION_LENGTH of AMD_MACH355 : entity is 6;
	attribute INSTRUCTION_OPCODE of AMD_MACH355 : entity is
		"BYPASS    (111111)," &
		"EXTEST    (000000)," &
		"SAMPLE    (000010)," &
		"IDCODE    (000001)," &
		"USERCODE  (010000)," &
		"HIGHZ     (010001)," &
		"REG_PRE   (001010)," &
		"REG_OBS   (001011)," &
		"PRIVATE   (110011,110100,110000,110010,100101,101110," &
	              " 100111,101101,001100,001101,001110,000110," &
                 " 000101,000111,001000,001001,001111,000011,000100)";

	attribute INSTRUCTION_CAPTURE of AMD_MACH355 : entity is "000001";
	attribute INSTRUCTION_DISABLE of AMD_MACH355 : entity is "HIGHZ";
	attribute INSTRUCTION_PRIVATE of AMD_MACH355 : entity is "PRIVATE";

	attribute IDCODE_REGISTER of AMD_MACH355 : entity is 
		"0000" &                        -- version number
		"0111000110111000" &            -- part identification
		"00000000001" &                 -- company code
		"1";                            -- mandatory 1

   attribute USERCODE_REGISTER of AMD_MACH355 : entity is
              "00000000000000000000000000000000";

	attribute REGISTER_ACCESS of AMD_MACH355 : entity is 
		"BYPASS (BYPASS,HIGHZ)," &
		"BOUNDARY (EXTEST, SAMPLE, REG_PRE,  REG_OBS)";

-- **************************************************************
-- *    BOUNDARY SCAN CELL REGISTER DESCRIPTION
-- *            THE FIRST CELL (0) IS THE CELL CLOSEST TO TDO
-- **************************************************************
	
	attribute BOUNDARY_CELLS of AMD_MACH355 : entity is "BC_1";
	attribute BOUNDARY_LENGTH of AMD_MACH355 : entity is 294;

	attribute BOUNDARY_REGISTER of AMD_MACH355 : entity is 

	--  1.  The order of the I/O cell is OE - OUTPUT - INPUT
	--  2.  The output is disabled when a 0 is shifted into the
	--        OE cell.
	--  3.  The pictoral representation of the Boundary scan 
	--        register is found in AMD document MACH3XX/4XX JTAG      
	--                                            Specification
	--

		" 293 (BC_1, IO(0), INTERNAL, X)," &  
		" 292 (BC_1, IO(0), OUTPUT3, X, 291, 0, Z)," &
		" 291 (BC_1,     *, CONTROL, 0)," & 
		" 290 (BC_1, IO(1), INTERNAL, X)," &  
		" 289 (BC_1, IO(1), OUTPUT3, X, 288, 0, Z)," &
		" 288 (BC_1,     *, CONTROL, 0)," & 
		" 287 (BC_1, IO(2), INTERNAL, X)," &  
		" 286 (BC_1, IO(2), OUTPUT3, X, 285, 0, Z)," &
		" 285 (BC_1,     *, CONTROL, 0)," & 
		" 284 (BC_1, IO(3), INTERNAL, X)," &  
		" 283 (BC_1,     *, OUTPUT3, X, 282, 0, Z)," &
		" 282 (BC_1,     *, CONTROL, 0)," & 
		" 281 (BC_1, IO(4), INTERNAL, X)," &  
		" 280 (BC_1,     *, OUTPUT3, X, 279, 0, Z)," &
		" 279 (BC_1,     *, CONTROL, 0)," & 
		" 278 (BC_1, IO(5), INTERNAL, X)," &  
		" 277 (BC_1,     *, OUTPUT3, X, 276, 0, Z)," &
		" 276 (BC_1,     *, CONTROL, 0)," & 
		" 275 (BC_1, IO(6), INTERNAL, X)," &  
		" 274 (BC_1,     *, OUTPUT3, X, 273, 0, Z)," &
		" 273 (BC_1,     *, CONTROL, 0)," & 
		" 272 (BC_1, IO(7), INTERNAL, X)," &  
		" 271 (BC_1,     *, OUTPUT3, X, 270, 0, Z)," &
		" 270 (BC_1,     *, CONTROL, 0)," & 
		" 269 (BC_1, IO(8), INTERNAL, X)," &
		" 268 (BC_1,     *, OUTPUT3, X, 267, 0, Z)," &
		" 267 (BC_1,     *, CONTROL, 0)," &
		" 266 (BC_1, IO(9), INTERNAL, X)," &
		" 265 (BC_1,     *, OUTPUT3, X, 264, 0, Z)," &
		" 264 (BC_1,     *, CONTROL, 0)," &
		" 263 (BC_1, IO(10), INTERNAL, X)," &
		" 262 (BC_1,      *, OUTPUT3, X, 261, 0, Z)," &
		" 261 (BC_1,     *, CONTROL, 0)," &
		" 260 (BC_1, IO(11), INTERNAL, X)," &
		" 259 (BC_1,      *, OUTPUT3, X, 258, 0, Z)," &
		" 258 (BC_1,     *, CONTROL, 0)," &
		" 257 (BC_1, IO(12), INTERNAL, X)," &
		" 256 (BC_1,      *, OUTPUT3, X, 255, 0, Z)," &
		" 255 (BC_1,     *, CONTROL, 0)," &
		" 254 (BC_1, IO(13), INPUT, X)," &
		" 253 (BC_1,      *, OUTPUT3, X, 252, 0, Z)," &
		" 252 (BC_1,     *, CONTROL, 0)," &
		" 251 (BC_1, IO(14), INPUT, X)," &
		" 250 (BC_1,      *, OUTPUT3, X, 249, 0, Z)," &
		" 249 (BC_1,     *, CONTROL, 0)," &
		" 248 (BC_1, IO(15), INPUT, X)," &
		" 247 (BC_1,      *, OUTPUT3, X, 246, 0, Z)," &
		" 246 (BC_1,     *, CONTROL, 0)," &
       
		" 245 (BC_1, IO(24), INPUT, X)," &              
		" 244 (BC_1,      *, OUTPUT3, X, 243, 0, Z)," & 
		" 243 (BC_1,     *, CONTROL, 0)," &             
		" 242 (BC_1, IO(25), INPUT, X)," &              
		" 241 (BC_1,      *, OUTPUT3, X, 240, 0, Z)," & 
		" 240 (BC_1,     *, CONTROL, 0)," &             
		" 239 (BC_1, IO(26), INPUT, X)," &              
		" 238 (BC_1,      *, OUTPUT3, X, 237, 0, Z)," & 
		" 237 (BC_1,     *, CONTROL, 0)," &             
		" 236 (BC_1, IO(27), INPUT, X)," &              
		" 235 (BC_1,      *, OUTPUT3, X, 234, 0, Z)," & 
		" 234 (BC_1,     *, CONTROL, 0)," &             
		" 233 (BC_1, IO(28), INPUT, X)," &              
		" 232 (BC_1,      *, OUTPUT3, X, 231, 0, Z)," & 
		" 231 (BC_1,     *, CONTROL, 0)," &             
		" 230 (BC_1, IO(29), INPUT, X)," &              
		" 229 (BC_1,      *, OUTPUT3, X, 228, 0, Z)," & 
		" 228 (BC_1,     *, CONTROL, 0)," &             
		" 227 (BC_1, IO(30), INPUT, X)," &              
		" 226 (BC_1,      *, OUTPUT3, X, 225, 0, Z)," & 
		" 225 (BC_1,     *, CONTROL, 0)," &             
		" 224 (BC_1, IO(31), INPUT, X)," &              
		" 223 (BC_1,      *, OUTPUT3, X, 222, 0, Z)," & 
		" 222 (BC_1,     *, CONTROL, 0)," &             
		" 221 (BC_1, IO(23), INPUT, X)," &
		" 220 (BC_1,      *, OUTPUT3, X, 219, 0, Z)," &
		" 219 (BC_1,     *, CONTROL, 0)," &
		" 218 (BC_1, IO(22), INPUT, X)," &
		" 217 (BC_1,      *, OUTPUT3, X, 216, 0, Z)," &
		" 216 (BC_1,     *, CONTROL, 0)," &
		" 215 (BC_1, IO(21), INPUT, X)," &
		" 214 (BC_1,      *, OUTPUT3, X, 213, 0, Z)," &
		" 213 (BC_1,     *, CONTROL, 0)," &
		" 212 (BC_1, IO(20), INPUT, X)," &
		" 211 (BC_1,      *, OUTPUT3, X, 210, 0, Z)," &
		" 210 (BC_1,     *, CONTROL, 0)," &
		" 209 (BC_1, IO(19), INPUT, X)," &
		" 208 (BC_1,      *, OUTPUT3, X, 207, 0, Z)," &
		" 207 (BC_1,     *, CONTROL, 0)," &
		" 206 (BC_1, IO(18), INPUT, X)," &
		" 205 (BC_1,      *, OUTPUT3, X, 204, 0, Z)," &
		" 204 (BC_1,     *, CONTROL, 0)," &
		" 203 (BC_1, IO(17), INPUT, X)," &
		" 202 (BC_1,      *, OUTPUT3, X, 201, 0, Z)," &
		" 201 (BC_1,     *, CONTROL, 0)," &
		" 200 (BC_1, IO(16), INPUT, X)," &
		" 199 (BC_1,      *, OUTPUT3, X, 198, 0, Z)," &
		" 198 (BC_1,     *, CONTROL, 0)," &
   
		" 197 (BC_1, DED_IN(0), INPUT, X)," &
		" 196 (BC_1, DED_IN(1), INPUT, X)," &

		" 195 (BC_1, IO(47), INTERNAL, X)," &
		" 194 (BC_1, IO(47), OUTPUT3, X, 193, 0, Z)," &
		" 193 (BC_1,     *, CONTROL, 0)," &
		" 192 (BC_1, IO(46), INTERNAL, X)," &
		" 191 (BC_1,      *, OUTPUT3, X, 190, 0, Z)," &
		" 190 (BC_1,     *, CONTROL, 0)," &
		" 189 (BC_1, IO(45), INPUT, X)," &
		" 188 (BC_1,      *, OUTPUT3, X, 187, 0, Z)," &
		" 187 (BC_1,     *, CONTROL, 0)," &
		" 186 (BC_1, IO(44), INPUT, X)," &
		" 185 (BC_1,      *, OUTPUT3, X, 184, 0, Z)," &
		" 184 (BC_1,     *, CONTROL, 0)," &
		" 183 (BC_1, IO(43), INPUT, X)," &
		" 182 (BC_1,      *, OUTPUT3, X, 181, 0, Z)," &
		" 181 (BC_1,     *, CONTROL, 0)," &
		" 180 (BC_1, IO(42), INPUT, X)," &
		" 179 (BC_1,      *, OUTPUT3, X, 178, 0, Z)," &
		" 178 (BC_1,     *, CONTROL, 0)," &
		" 177 (BC_1, IO(41), INPUT, X)," &
		" 176 (BC_1,      *, OUTPUT3, X, 175, 0, Z)," &
		" 175 (BC_1,     *, CONTROL, 0)," &
		" 174 (BC_1, IO(40), INPUT, X)," &
		" 173 (BC_1,      *, OUTPUT3, X, 172, 0, Z)," &
		" 172 (BC_1,     *, CONTROL, 0)," &
		" 171 (BC_1, IO(39), INPUT, X)," &
		" 170 (BC_1,      *, OUTPUT3, X, 169, 0, Z)," &
		" 169 (BC_1,     *, CONTROL, 0)," &
		" 168 (BC_1, IO(38), INPUT, X)," &
		" 167 (BC_1,      *, OUTPUT3, X, 166, 0, Z)," &
		" 166 (BC_1,     *, CONTROL, 0)," &
		" 165 (BC_1, IO(37), INPUT, X)," &
		" 164 (BC_1,      *, OUTPUT3, X, 163, 0, Z)," &
		" 163 (BC_1,     *, CONTROL, 0)," &
		" 162 (BC_1, IO(36), INPUT, X)," &
		" 161 (BC_1,      *, OUTPUT3, X, 160, 0, Z)," &
		" 160 (BC_1,     *, CONTROL, 0)," &
		" 159 (BC_1, IO(35), INPUT, X)," &
		" 158 (BC_1,      *, OUTPUT3, X, 157, 0, Z)," &
		" 157 (BC_1,     *, CONTROL, 0)," &
		" 156 (BC_1, IO(34), INPUT, X)," &
		" 155 (BC_1,      *, OUTPUT3, X, 154, 0, Z)," &
		" 154 (BC_1,     *, CONTROL, 0)," &
		" 153 (BC_1, IO(33), INPUT, X)," &
		" 152 (BC_1,      *, OUTPUT3, X, 151, 0, Z)," &
		" 151 (BC_1,     *, CONTROL, 0)," &
		" 150 (BC_1, IO(32), INPUT, X)," &
		" 149 (BC_1,      *, OUTPUT3, X, 148, 0, Z)," &
		" 148 (BC_1,     *, CONTROL, 0)," &

		" 147 (BC_1, DED_IN(2), INTERNAL, X)," &

		" 146 (BC_1, IO(48), INTERNAL, X)," &
		" 145 (BC_1, IO(48), OUTPUT3, X, 144, 0, Z)," &
		" 144 (BC_1,     *, CONTROL, 0)," &
		" 143 (BC_1, IO(49), INTERNAL, X)," &
		" 142 (BC_1, IO(49), OUTPUT3, X, 141, 0, Z)," &
		" 141 (BC_1,     *, CONTROL, 0)," &
		" 140 (BC_1, IO(50), INTERNAL, X)," &
		" 139 (BC_1,      *, OUTPUT3, X, 138, 0, Z)," &
		" 138 (BC_1,     *, CONTROL, 0)," &
		" 137 (BC_1, IO(51), INTERNAL, X)," &
		" 136 (BC_1,      *, OUTPUT3, X, 135, 0, Z)," &
		" 135 (BC_1,     *, CONTROL, 0)," &
		" 134 (BC_1, IO(52), INTERNAL, X)," &
		" 133 (BC_1,      *, OUTPUT3, X, 132, 0, Z)," &
		" 132 (BC_1,     *, CONTROL, 0)," &
		" 131 (BC_1, IO(53), INTERNAL, X)," &
		" 130 (BC_1,      *, OUTPUT3, X, 129, 0, Z)," &
		" 129 (BC_1,     *, CONTROL, 0)," &
		" 128 (BC_1, IO(54), INTERNAL, X)," &
		" 127 (BC_1,      *, OUTPUT3, X, 126, 0, Z)," &
		" 126 (BC_1,     *, CONTROL, 0)," &
		" 125 (BC_1, IO(55), INTERNAL, X)," &
		" 124 (BC_1,      *, OUTPUT3, X, 123, 0, Z)," &
		" 123 (BC_1,     *, CONTROL, 0)," &
		" 122 (BC_1, IO(56), INTERNAL, X)," &
		" 121 (BC_1,      *, OUTPUT3, X, 120, 0, Z)," &
		" 120 (BC_1,     *, CONTROL, 0)," &
		" 119 (BC_1, IO(57), INTERNAL, X)," &
		" 118 (BC_1,      *, OUTPUT3, X, 117, 0, Z)," &
		" 117 (BC_1,     *, CONTROL, 0)," &
		" 116 (BC_1, IO(58), INTERNAL, X)," &
		" 115 (BC_1,      *, OUTPUT3, X, 114, 0, Z)," &
		" 114 (BC_1,     *, CONTROL, 0)," &
		" 113 (BC_1, IO(59), INTERNAL, X)," &
		" 112 (BC_1,      *, OUTPUT3, X, 111, 0, Z)," &
		" 111 (BC_1,     *, CONTROL, 0)," &
		" 110 (BC_1, IO(60), INTERNAL, X)," &
		" 109 (BC_1,      *, OUTPUT3, X, 108, 0, Z)," &
		" 108 (BC_1,     *, CONTROL, 0)," &
		" 107 (BC_1, IO(61), INTERNAL, X)," &
		" 106 (BC_1,      *, OUTPUT3, X, 105, 0, Z)," &
		" 105 (BC_1,     *, CONTROL, 0)," &
		" 104 (BC_1, IO(62), INTERNAL, X)," &
		" 103 (BC_1,      *, OUTPUT3, X, 102, 0, Z)," &
		" 102 (BC_1,     *, CONTROL, 0)," &
		" 101 (BC_1, IO(63), INTERNAL, X)," &
		" 100 (BC_1,      *, OUTPUT3, X, 99, 0, Z)," &
		"  99 (BC_1,     *, CONTROL, 0)," &

   	"  98 (BC_1, IO(71), INTERNAL, X)," &
		"  97 (BC_1, IO(71), OUTPUT3, X, 96, 0, Z)," &
		"  96 (BC_1,     *, CONTROL, 0)," &
		"  95 (BC_1, IO(70), INTERNAL, X)," &
		"  94 (BC_1,      *, OUTPUT3, X, 93, 0, Z)," &
		"  93 (BC_1,     *, CONTROL, 0)," &
		"  92 (BC_1, IO(69), INTERNAL, X)," &
		"  91 (BC_1,      *, OUTPUT3, X, 90, 0, Z)," &
		"  90 (BC_1,     *, CONTROL, 0)," &
		"  89 (BC_1, IO(68), INTERNAL, X)," &
		"  88 (BC_1,      *, OUTPUT3, X, 87, 0, Z)," &
		"  87 (BC_1,     *, CONTROL, 0)," &
		"  86 (BC_1, IO(67), INTERNAL, X)," &
		"  85 (BC_1,      *, OUTPUT3, X, 84, 0, Z)," &
		"  84 (BC_1,     *, CONTROL, 0)," &
		"  83 (BC_1, IO(66), INTERNAL, X)," &
		"  82 (BC_1,      *, OUTPUT3, X, 81, 0, Z)," &
		"  81 (BC_1,     *, CONTROL, 0)," &
		"  80 (BC_1, IO(65), INTERNAL, X)," &
		"  79 (BC_1,      *, OUTPUT3, X, 78, 0, Z)," &
		"  78 (BC_1,     *, CONTROL, 0)," &
		"  77 (BC_1, IO(64), INTERNAL, X)," &
		"  76 (BC_1,      *, OUTPUT3, X, 75, 0, Z)," &
		"  75 (BC_1,     *, CONTROL, 0)," &
		"  74 (BC_1, IO(72), INTERNAL, X)," &
		"  73 (BC_1,      *, OUTPUT3, X, 72, 0, Z)," &
		"  72 (BC_1,     *, CONTROL, 0)," &
		"  71 (BC_1, IO(73), INTERNAL, X)," &
		"  70 (BC_1,      *, OUTPUT3, X, 69, 0, Z)," &
		"  69 (BC_1,     *, CONTROL, 0)," &
		"  68 (BC_1, IO(74), INTERNAL, X)," &
		"  67 (BC_1,      *, OUTPUT3, X, 66, 0, Z)," &
		"  66 (BC_1,     *, CONTROL, 0)," &
		"  65 (BC_1, IO(75), INTERNAL, X)," &
		"  64 (BC_1,      *, OUTPUT3, X, 63, 0, Z)," &
		"  63 (BC_1,     *, CONTROL, 0)," &
		"  62 (BC_1, IO(76), INTERNAL, X)," &
		"  61 (BC_1,      *, OUTPUT3, X, 60, 0, Z)," &
		"  60 (BC_1,     *, CONTROL, 0)," &
		"  59 (BC_1, IO(77), INTERNAL, X)," &
		"  58 (BC_1,      *, OUTPUT3, X, 57, 0, Z)," &
		"  57 (BC_1,     *, CONTROL, 0)," &
		"  56 (BC_1, IO(78), INTERNAL, X)," &
		"  55 (BC_1,      *, OUTPUT3, X, 54, 0, Z)," &
		"  54 (BC_1,     *, CONTROL, 0)," &
		"  53 (BC_1, IO(79), INTERNAL, X)," &
		"  52 (BC_1,      *, OUTPUT3, X, 51, 0, Z)," &
		"  51 (BC_1,     *, CONTROL, 0)," &

		"  50 (BC_1, DED_IN(4), INTERNAL, X)," &
		"  49 (BC_1, DED_IN(3), INPUT, X)," &

       "  48 (BC_1, IO(95), INTERNAL, X),"  &
		"  47 (BC_1, IO(95), OUTPUT3, X, 46, 0, Z),"  &
		"  46 (BC_1,     *, CONTROL, 0),"  &
		"  45 (BC_1, IO(94), INTERNAL, X),"  &
		"  44 (BC_1,      *, OUTPUT3, X, 43, 0, Z),"  &
		"  43 (BC_1,     *, CONTROL, 0),"  &
		"  42 (BC_1, IO(93), INTERNAL, X),"  &
		"  41 (BC_1,      *, OUTPUT3, X, 40, 0, Z),"  &
		"  40 (BC_1,     *, CONTROL, 0),"  &
		"  39 (BC_1, IO(92), INTERNAL, X),"  &
		"  38 (BC_1,      *, OUTPUT3, X, 37, 0, Z),"  &
		"  37 (BC_1,     *, CONTROL, 0),"  &
		"  36 (BC_1, IO(91), INTERNAL, X),"  &
		"  35 (BC_1,      *, OUTPUT3, X, 34, 0, Z),"  &
		"  34 (BC_1,     *, CONTROL, 0),"  &
		"  33 (BC_1, IO(90), INTERNAL, X),"  &
		"  32 (BC_1,      *, OUTPUT3, X, 31, 0, Z),"  &
		"  31 (BC_1,     *, CONTROL, 0),"  &
		"  30 (BC_1, IO(89), INTERNAL, X),"  &
		"  29 (BC_1,      *, OUTPUT3, X, 28, 0, Z),"  &
		"  28 (BC_1,     *, CONTROL, 0),"  &
		"  27 (BC_1, IO(88), INTERNAL, X),"  &
		"  26 (BC_1,      *, OUTPUT3, X, 25, 0, Z),"  &
		"  25 (BC_1,     *, CONTROL, 0),"  &
		"  24 (BC_1, IO(87), INTERNAL, X),"  &
		"  23 (BC_1,      *, OUTPUT3, X, 22, 0, Z),"  &
		"  22 (BC_1,     *, CONTROL, 0),"  &
		"  21 (BC_1, IO(86), INTERNAL, X),"  &
		"  20 (BC_1,      *, OUTPUT3, X, 19, 0, Z),"  &
		"  19 (BC_1,     *, CONTROL, 0),"  &
		"  18 (BC_1, IO(85), INTERNAL, X),"  &
		"  17 (BC_1,      *, OUTPUT3, X, 16, 0, Z),"  &
		"  16 (BC_1,     *, CONTROL, 0),"  &
		"  15 (BC_1, IO(84), INTERNAL, X),"  &
		"  14 (BC_1,      *, OUTPUT3, X, 13, 0, Z),"  &
		"  13 (BC_1,     *, CONTROL, 0),"  &
		"  12 (BC_1, IO(83), INTERNAL, X),"  &
		"  11 (BC_1,      *, OUTPUT3, X, 10, 0, Z),"  &
		"  10 (BC_1,     *, CONTROL, 0),"  &
		"   9 (BC_1, IO(82), INTERNAL, X),"  &
		"   8 (BC_1,      *, OUTPUT3, X, 7, 0, Z),"  &
		"   7 (BC_1,     *, CONTROL, 0)," &
		"   6 (BC_1, IO(81), INTERNAL, X)," &
		"   5 (BC_1,      *, OUTPUT3, X, 4, 0, Z),"  &
		"   4 (BC_1,     *, CONTROL, 0)," &
		"   3 (BC_1, IO(80), INTERNAL, X)," &
		"   2 (BC_1,      *, OUTPUT3, X, 1, 0, Z),"  &
		"   1 (BC_1,     *, CONTROL, 0),"  &

		"   0 (BC_1, DED_IN(5), INPUT, X)"; 


end AMD_MACH355;
