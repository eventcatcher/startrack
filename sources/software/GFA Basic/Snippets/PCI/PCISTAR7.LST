CLS
adr=&HA0080000    ! Config PLX
adr2=&H81000000   ! PLX Registers Memory Mapped         ,80H
adr3=&HB0001000   ! PLX Registers I/O Mapped            ,80H
adr4=&HB0001100   ! PLX Local Adress Space I/O Mapped   ,100H
'
@init
'
@wordintel(adr+2,device)
@wordintel(adr,vendor)
POKE adr+4,3                  ! enables CS for memory and io-space in the command-register
@wordintel(adr+6,status)
@wordintel(adr+4,command)
'
@longintel(adr+&H10,base0)  ! Base Adress Memory Mapped Registers
@longintel(adr+&H14,base1)  ! Base Adress I/O Mapped Registers
@longintel(adr+&H18,base2)  ! Base Adress Local Adress Space
@longintel(adr+&H1C,base3)
@longintel(adr+&H20,base4)
@longintel(adr+&H24,base5)
'
'
longwrite(adr2+4,&H2000001)  ! Remap to IC3 /SELM Adress Space
'
@longwrite(adr4,1)
@longwrite(adr4+4,0)
'
ax=&H80
ax2=&HC0
'
FOR i=0 TO 127
  j=(i AND 1)
  IF j=0 THEN
    @longwrite(adr4+ax,i)
  ELSE
    @longwrite(adr4+ax2,i)
  ENDIF
NEXT i
'
@longintel(adr4+ax,y)
'
PRINT
PRINT
PRINT
PRINT
PRINT
PRINT
REPEAT
  INC h
  TEXT 64,64,h
  FOR i=128 TO 255
    j=(i AND 1)
    IF j=0 THEN
      @longwrite(adr4+ax,i)
    ELSE
      @longwrite(adr4+ax2,i)
    ENDIF
  NEXT i
  '
  FOR i=0 TO 127
    @longintel(adr4+ax,y)
    @longintel(adr4+ax+4,v)
    v=(v AND 1)
    j=(i AND 1)
    IF j<>v THEN
      @longintel(adr4+ax+4,bv)
      @longintel(adr4+ax+8,v2)
      bv=(bv AND 1)
      v2=(v2 AND 1)
      PRINT i,j,v,bv,v2
      STOP
    ENDIF
  NEXT i
  '
  FOR i=0 TO 127
    j=(i AND 1)
    IF j=0 THEN
      @longwrite(adr4+ax,i)
    ELSE
      @longwrite(adr4+ax2,i)
    ENDIF
  NEXT i
  '
  FOR i=128 TO 255
    @longintel(adr4+ax,y)
    @longintel(adr4+ax+4,v)
    v=(v AND 1)
    j=(i AND 1)
    IF j<>v THEN
      @longintel(adr4+ax+4,bv)
      @longintel(adr4+ax+8,v2)
      bv=(bv AND 1)
      v2=(v2 AND 1)
      PRINT i,j,v,bv,v2
      STOP
    ENDIF
  NEXT i
UNTIL MOUSEK
'
END
'
> PROCEDURE init
  pmem=MALLOC(4)
RETURN
'
> PROCEDURE longintel(memadr,VAR a)
  LPOKE pmem,LPEEK(memadr)
  a1=PEEK(pmem)
  a2=PEEK(pmem+1)
  a3=PEEK(pmem+2)
  a4=PEEK(pmem+3)
  POKE pmem,a4
  POKE pmem+1,a3
  POKE pmem+2,a2
  POKE pmem+3,a1
  a=LPEEK(pmem)
RETURN
'
> PROCEDURE wordintel(memadr,VAR a)
  DPOKE pmem,DPEEK(memadr)
  a1=PEEK(pmem)
  a2=PEEK(pmem+1)
  POKE pmem,a2
  POKE pmem+1,a1
  a=DPEEK(pmem)
RETURN
'
> PROCEDURE longwrite(memadr,a)
  LPOKE pmem,a
  a1=PEEK(pmem)
  a2=PEEK(pmem+1)
  a3=PEEK(pmem+2)
  a4=PEEK(pmem+3)
  POKE pmem,a4
  POKE pmem+1,a3
  POKE pmem+2,a2
  POKE pmem+3,a1
  LPOKE memadr,LPEEK(pmem)
RETURN
