CLS
adr=&HA0080000    ! Config PLX
adr2=&H81000000   ! PLX Registers Memory Mapped         ,80H
adr3=&HB0001000   ! PLX Registers I/O Mapped            ,80H
adr4=&HB0001100   ! PLX Local Adress Space I/O Mapped   ,100H
'
@init
'
@wordintel(adr+2,device)
@wordintel(adr,vendor)
POKE adr+4,3                  ! enables CS for memory and io-space in the command-register
@wordintel(adr+6,status)
@wordintel(adr+4,command)
'
@longintel(adr+&H10,base0)  ! Base Adress Memory Mapped Registers
@longintel(adr+&H14,base1)  ! Base Adress I/O Mapped Registers
@longintel(adr+&H18,base2)  ! Base Adress Local Adress Space
@longintel(adr+&H1C,base3)
@longintel(adr+&H20,base4)
@longintel(adr+&H24,base5)
'
PRINT "device,vendor:",HEX$(device),HEX$(vendor)
PRINT "status,command:",HEX$(status),HEX$(command)
PRINT "base 0-5:",HEX$(base0),HEX$(base1),HEX$(base2),HEX$(base3),HEX$(base4),HEX$(base5)
'
longwrite(adr2+4,&H101)  ! Remap the local adress space
' longwrite(adr2+4,&H1000001)  ! Remap to PLX Adress Space
' longwrite(adr2+4,&H2000001)  ! Remap to IC3 /SELM Adress Space
' longwrite(adr2+4,&H3000001)  ! Remap to /SELW Adress Space
'
PRINT
' LPOKE adr4,&H12345678
' LPOKE adr4+4,&H11223344
' LPOKE adr4+8,&H55667788
'
PRINT "Offset","reg-mem","reg-i/o","local-space"
PRINT "-----------------------------------------------------------"
FOR i=0 TO &H9F STEP 4
  '  LPOKE adr4+i,i
  PRINT HEX$(i),
  @longintel(adr2+i,a)
  PRINT HEX$(a),
  @longintel(adr3+i,a)
  PRINT HEX$(a),
  PRINT HEX$(LPEEK(adr4+i))
NEXT i
END
'
> PROCEDURE init
  pmem=MALLOC(4)
RETURN
'
> PROCEDURE longintel(memadr,VAR a)
  LPOKE pmem,LPEEK(memadr)
  a1=PEEK(pmem)
  a2=PEEK(pmem+1)
  a3=PEEK(pmem+2)
  a4=PEEK(pmem+3)
  POKE pmem,a4
  POKE pmem+1,a3
  POKE pmem+2,a2
  POKE pmem+3,a1
  a=LPEEK(pmem)
RETURN
'
> PROCEDURE wordintel(memadr,VAR a)
  DPOKE pmem,DPEEK(memadr)
  a1=PEEK(pmem)
  a2=PEEK(pmem+1)
  POKE pmem,a2
  POKE pmem+1,a1
  a=DPEEK(pmem)
RETURN
'
> PROCEDURE longwrite(memadr,a)
  LPOKE pmem,a
  a1=PEEK(pmem)
  a2=PEEK(pmem+1)
  a3=PEEK(pmem+2)
  a4=PEEK(pmem+3)
  POKE pmem,a4
  POKE pmem+1,a3
  POKE pmem+2,a2
  POKE pmem+3,a1
  LPOKE memadr,LPEEK(pmem)
RETURN
