HiSoft GenST 680x0 Macro Assembler v2.08D  07/11/94  21:52:26  Sage 1



    1 T  00000000 48E7FFFE             begin:    movem.l   d0-d7/a0-a6,-(sp)
    2 T  00000004 266F0040                       movea.l   64(sp),a3  ; von
    3 T  00000008 222F0044                       move.l    68(sp),d1  ; bis
    4 T  0000000C 262F0048                       move.l    72(sp),d3 ; loop
    5 T  00000010 286F004C                       move.l    76(sp),a4 ; Returnwert
    6 T  00000014 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
    7 T  00000018 4BFA0152                       lea.l     ptr(pc),a5
    8 T  0000001C 2F0D                           move.l    a5,-(sp)
    9 T  0000001E 3F3C0000                       move.w    #0,-(sp)
   10 T  00000022 3F3C0019                       move.w    #25,-(sp)
   11 T  00000026 4E4E                           trap      #14
   12 T  00000028 508F                           addq.l    #8,sp
   13 T  0000002A 3F3C000B             clear:    move.w    #11,-(sp)
   14 T  0000002E 4E41                           trap      #1
   15 T  00000030 548F                           addq.l    #2,sp
   16 T  00000032 0C8000000000                   cmpi.l    #0,d0
   17 T  00000038 670A                           beq.s     weiter
   18 T  0000003A 3F3C0001                       move.w    #1,-(sp)
   19 T  0000003E 4E41                           trap      #1
   20 T  00000040 548F                           addq.l    #2,sp
   21 T  00000042 60E6                           bra.s     clear
   22 T  00000044 3F3C0022             weiter:   move.w    #34,-(sp)
   23 T  00000048 4E4E                           trap      #14
   24 T  0000004A 548F                           addq.l    #2,sp
   25 T  0000004C 2040                           movea.l   d0,a0
   26 T  0000004E 43FA0126                       lea.l     rett(pc),a1
   27 T  00000052 236800200002                   move.l    32(a0),2(a1)
   28 T  00000058 43FA0114                       lea.l     neuikbd(pc),a1
   29 T  0000005C 21490020                       move.l    a1,32(a0)
   30 T  00000060 4CDF7FFF             anf0:     movem.l   (sp)+,d0-d7/a0-a6
   31 T  00000064 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
   32 T  00000068 41F900DF0441                   lea.l     $df0441,a0
   33 T  0000006E 43F900DF04C0                   lea.l     $df04c0,a1          ; Wordmode
   34 T  00000074 10BC0004                       move.b    #4,(a0)
   35 T  00000078 49FA0102                       lea.l     merk(pc),a4
   36 T  0000007C 7A08                           moveq.l   #8,d5
   37 T  0000007E 7C04                           moveq.l   #4,d6
   38 T  00000080 244B                           movea.l   a3,a2
   39 T  00000082 1010                 anf1:     move.b    (a0),d0
   40 T  00000084 C006                           and.b     d6,d0
   41 T  00000086 67FA                           beq.s     anf1
   42 T  00000088 1E1A                           move.b    (a2)+,d7
   43 T  0000008A 0B87                           bclr      d5,d7     ; Parity loeschen (Kennung fÅr Rechter Kanal)
   44 T  0000008C 3287                           move.w    d7,(a1)   ; High-Byte senden
   45 T  0000008E 1010                 anf2:     move.b    (a0),d0
   46 T  00000090 C006                           and.b     d6,d0
   47 T  00000092 67FA                           beq.s     anf2
   48 T  00000094 1E1A                           move.b    (a2)+,d7
   49 T  00000096 0B87                           bclr      d5,d7     ; Parity loeschen (Kennung fÅr Rechter Kanal)
   50 T  00000098 3287                           move.w    d7,(a1)   ; Low-Byte senden
   51 T  0000009A 1010                 anf3:     move.b    (a0),d0
   52 T  0000009C C006                           and.b     d6,d0
   53 T  0000009E 67FA                           beq.s     anf3
   54 T  000000A0 1E1A                           move.b    (a2)+,d7
   55 T  000000A2 0BC7                           bset      d5,d7     ; Parity einfÅgen (Kennung fÅr Linker Kanal)
   56 T  000000A4 3287                           move.w    d7,(a1)   ; High-Byte senden
   57 T  000000A6 1010                 anf4:     move.b    (a0),d0
HiSoft GenST 680x0 Macro Assembler v2.08D  07/11/94  21:52:26  Sage 2



   58 T  000000A8 C006                           and.b     d6,d0
   59 T  000000AA 67FA                           beq.s     anf4
   60 T  000000AC 1E1A                           move.b    (a2)+,d7
   61 T  000000AE 0BC7                           bset      d5,d7     ; Parity einfÅgen (Kennung fÅr Linker Kanal)
   62 T  000000B0 3287                           move.w    d7,(a1)   ; Low-Byte senden
   63 T  000000B2 3014                           move.w    (a4),d0
   64 T  000000B4 66000086                       bne       weg
   65 T  000000B8 B5C1                           cmpa.l    d1,a2
   66 T  000000BA 66C6                           bne.s     anf1
   67 T  000000BC 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
   68 T  000000C0 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
   69 T  000000C4 41F900DF0441                   lea.l     $df0441,a0
   70 T  000000CA 43F900DF04C0                   lea.l     $df04c0,a1          ; Wordmode
   71 T  000000D0 2401                           move.l    d1,d2
   72 T  000000D2 220B                           move.l    a3,d1
   73 T  000000D4 068100000004                   add.l     #4,d1 
   74 T  000000DA 2642                           movea.l   d2,a3
   75 T  000000DC 97FC00000004                   suba.l    #4,a3
   76 T  000000E2 7804                           moveq.l   #4,d4
   77 T  000000E4 49FA0096                       lea.l     merk(pc),a4
   78 T  000000E8 7A08                           moveq.l   #8,d5
   79 T  000000EA 7C04                           moveq.l   #4,d6
   80 T  000000EC 244B                           movea.l   a3,a2
   81 T  000000EE 1010                 anfb1:    move.b    (a0),d0
   82 T  000000F0 C006                           and.b     d6,d0
   83 T  000000F2 67FA                           beq.s     anfb1
   84 T  000000F4 1E1A                           move.b    (a2)+,d7
   85 T  000000F6 0B87                           bclr      d5,d7     ; Parity loeschen (Kennung fÅr Rechter Kanal)
   86 T  000000F8 3287                           move.w    d7,(a1)   ; High-Byte senden
   87 T  000000FA 1010                 anfb2:    move.b    (a0),d0
   88 T  000000FC C006                           and.b     d6,d0
   89 T  000000FE 67FA                           beq.s     anfb2
   90 T  00000100 1E1A                           move.b    (a2)+,d7
   91 T  00000102 0B87                           bclr      d5,d7     ; Parity loeschen (Kennung fÅr Rechter Kanal)
   92 T  00000104 3287                           move.w    d7,(a1)   ; Low-Byte senden
   93 T  00000106 1010                 anfb3:    move.b    (a0),d0
   94 T  00000108 C006                           and.b     d6,d0
   95 T  0000010A 67FA                           beq.s     anfb3
   96 T  0000010C 1E1A                           move.b    (a2)+,d7
   97 T  0000010E 0BC7                           bset      d5,d7     ; Parity einfÅgen (Kennung fÅr Linker Kanal)
   98 T  00000110 3287                           move.w    d7,(a1)   ; High-Byte senden
   99 T  00000112 1010                 anfb4:    move.b    (a0),d0
  100 T  00000114 C006                           and.b     d6,d0
  101 T  00000116 67FA                           beq.s     anfb4
  102 T  00000118 1E1A                           move.b    (a2)+,d7
  103 T  0000011A 0BC7                           bset      d5,d7     ; Parity einfÅgen (Kennung fÅr Linker Kanal)
  104 T  0000011C 3287                           move.w    d7,(a1)   ; Low-Byte senden
  105 T  0000011E 3014                           move.w    (a4),d0
  106 T  00000120 660E                           bne.s     weg2
  107 T  00000122 95C4                           suba.l    d4,a2
  108 T  00000124 B5C1                           cmpa.l    d1,a2
  109 T  00000126 66C6                           bne.s     anfb1
  110 T  00000128 4A83                           tst.l     d3
  111 T  0000012A 6710                           beq.s     weg
  112 T  0000012C 6000FF32                       bra       anf0
  113 T  00000130 4CDF7FFF             weg2:     movem.l   (sp)+,d0-d7/a0-a6
  114 T  00000134 28BC00000001                   move.l    #1,(a4)
HiSoft GenST 680x0 Macro Assembler v2.08D  07/11/94  21:52:26  Sage 3



  115 T  0000013A 6004                           bra.s     weg3
  116 T  0000013C 4CDF7FFF             weg:      movem.l   (sp)+,d0-d7/a0-a6
  117 T  00000140 4BFA002B             weg3:     lea.l     ptr2(pc),a5
  118 T  00000144 2F0D                           move.l    a5,-(sp)
  119 T  00000146 3F3C0000                       move.w    #0,-(sp)
  120 T  0000014A 3F3C0019                       move.w    #25,-(sp)
  121 T  0000014E 4E4E                           trap      #14
  122 T  00000150 508F                           addq.l    #8,sp
  123 T  00000152 3F3C0022                       move.w    #34,-(sp)
  124 T  00000156 4E4E                           trap      #14
  125 T  00000158 548F                           addq.l    #2,sp
  126 T  0000015A 2040                           movea.l   d0,a0
  127 T  0000015C 43FA0018                       lea.l     rett(pc),a1
  128 T  00000160 216900020020                   move.l    2(a1),32(a0)
  129 T  00000166 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
  130 T  0000016A 4E75                           rts
  131 T  0000016C 12                   ptr:      dc.b $12
  132 T  0000016D 08                   ptr2:     Dc.b $8
  133 T  0000016E 33FC00010000017C     neuikbd:  move.w    #1,merk
  134 T  00000176 4EF900000176         rett:     jmp       rett
  135 T  0000017C 0000                 merk:     Dc.w 0
  136 T  0000017E                                END

