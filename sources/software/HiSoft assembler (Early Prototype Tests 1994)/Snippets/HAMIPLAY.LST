HiSoft GenST 680x0 Macro Assembler v2.08D  08/11/94  18:14:40  Sage 1



    1 T  00000000 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
    2 T  00000004 266F0040                       movea.l   64(sp),a3  ; adr
    3 T  00000008 2C6F0044                       movea.l   68(sp),a6  ; fname
    4 T  0000000C 286F0048                       move.l    72(sp),a4 ; sectors
    5 T  00000010 2A2F004C                       move.l    76(sp),d5 ; len
    6 T  00000014 2E2F0050                       move.l    80(sp),d7 ; handle
    7 T  00000018 2A6F0054                       move.l    84(sp),a5 ; adder
    8 T  0000001C 206F0058                       move.l    88(sp),a0 ; Returnwert
    9 T  00000020 242F005C                       move.l    92(sp),d2 ; midi
   10 T  00000024 2F08                           move.l    a0,-(sp)
   11 T  00000026 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
   12 T  0000002A 4BFA015A                       lea.l     ptr(pc),a5
   13 T  0000002E 2F0D                           move.l    a5,-(sp)
   14 T  00000030 3F3C0000                       move.w    #0,-(sp)
   15 T  00000034 3F3C0019                       move.w    #25,-(sp)
   16 T  00000038 4E4E                           trap      #14
   17 T  0000003A 508F                           addq.l    #8,sp
   18 T  0000003C 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
   19 T  00000040 41F900DF0441                   lea.l     $df0441,a0          ; Flagstatus
   20 T  00000046 43F900DF04C0                   lea.l     $df04c0,a1          ; SDATA Word-Read (wegen PARITY)
   21 T  0000004C 220B                           move.l    a3,d1     ; MEMende
   22 T  0000004E D285                           add.l     d5,d1
   23 T  00000050 7C00                           moveq.l   #0,d6
   24 T  00000052 7804                           moveq.l   #4,d4
   25 T  00000054 7608                           moveq.l   #8,d3
   26 T  00000056 5286                 anf:      addq.l    #1,d6
   27 T  00000058 244B                           movea.l   a3,a2
   28 T  0000005A 48E7FFFC                       movem.l   d0-d7/a0-a5,-(sp)
   29 T  0000005E 2F0B                           move.l    a3,-(sp)  ; Fread
   30 T  00000060 2F05                           move.l    d5,-(sp)
   31 T  00000062 3F07                           move.w    d7,-(sp)
   32 T  00000064 3F3C003F                       move.w    #63,-(sp)
   33 T  00000068 4E41                           trap      #1
   34 T  0000006A 4FEF000C                       lea.l     $c(sp),sp
   35 T  0000006E 4CDF3FFF                       movem.l   (sp)+,d0-d7/a0-a5
   36 T  00000072 1010                           move.b    (a0),d0   ; FIFO halbleer ?
   37 T  00000074 02000008                       andi.b    #8,d0
   38 T  00000078 6724                           beq.s     anf2
   39 T  0000007A 2F01                           move.l    d1,-(sp)
   40 T  0000007C 303C03FF                       move.w    #$3ff,d0     ; ...dann FIFO halb-fuellen (FIFO-LEN/2/4-1)!
   41 T  00000080 121A                 copy:     move.b    (a2)+,d1
   42 T  00000082 0781                           bclr      d3,d1     ; Rechter Kanal (Bit 8 geloescht)
   43 T  00000084 3281                           move.w    d1,(a1)   ; High-Byte senden
   44 T  00000086 121A                           move.b    (a2)+,d1
   45 T  00000088 0781                           bclr      d3,d1     ; Rechter Kanal (Bit 8 geloescht)
   46 T  0000008A 3281                           move.w    d1,(a1)   ; Low-Byte senden
   47 T  0000008C 121A                           move.b    (a2)+,d1
   48 T  0000008E 07C1                           bset      d3,d1     ; Linker Kanal (Bit 8 gesetzt)
   49 T  00000090 3281                           move.w    d1,(a1)   ; High-Byte senden
   50 T  00000092 121A                           move.b    (a2)+,d1
   51 T  00000094 07C1                           bset      d3,d1     ; Linker Kanal (Bit 8 gesetzt)
   52 T  00000096 3281                           move.w    d1,(a1)   ; Low-Byte senden
   53 T  00000098 51C8FFE6                       dbra      d0,copy
   54 T  0000009C 221F                           move.l    (sp)+,d1
   55 T  0000009E 1010                 anf2:     move.b    (a0),d0
   56 T  000000A0 C004                           and.b     d4,d0
   57 T  000000A2 67FA                           beq.s     anf2
HiSoft GenST 680x0 Macro Assembler v2.08D  08/11/94  18:14:40  Sage 2



   58 T  000000A4 101A                           move.b    (a2)+,d0
   59 T  000000A6 0780                           bclr      d3,d0     ; Rechter Kanal (Bit 8 geloescht)
   60 T  000000A8 3280                           move.w    d0,(a1)   ; High-Byte senden
   61 T  000000AA 1010                 anf3:     move.b    (a0),d0
   62 T  000000AC C004                           and.b     d4,d0
   63 T  000000AE 67FA                           beq.s     anf3
   64 T  000000B0 101A                           move.b    (a2)+,d0
   65 T  000000B2 0780                           bclr      d3,d0     ; Rechter Kanal (Bit 8 geloescht)
   66 T  000000B4 3280                           move.w    d0,(a1)   ; Low-Byte senden
   67 T  000000B6 1010                 anf4:     move.b    (a0),d0
   68 T  000000B8 C004                           and.b     d4,d0
   69 T  000000BA 67FA                           beq.s     anf4
   70 T  000000BC 101A                           move.b    (a2)+,d0
   71 T  000000BE 07C0                           bset      d3,d0     ; Linker Kanal (Bit 8 gesetzt)
   72 T  000000C0 3280                           move.w    d0,(a1)   ; High-Byte senden
   73 T  000000C2 1010                 anf5:     move.b    (a0),d0
   74 T  000000C4 C004                           and.b     d4,d0
   75 T  000000C6 67FA                           beq.s     anf5
   76 T  000000C8 101A                           move.b    (a2)+,d0
   77 T  000000CA 07C0                           bset      d3,d0     ; Linker Kanal (Bit 8 gesetzt)
   78 T  000000CC 3280                           move.w    d0,(a1)   ; Low-Byte senden
   79 T  000000CE 48E77FFE                       movem.l   d1-a6,-(sp)
   80 T  000000D2 3F3C0003                       move.w    #3,-(sp)  ; MIDI
   81 T  000000D6 3F3C0001                       move.w    #1,-(sp)  ; Bconstat
   82 T  000000DA 4E4D                           trap      #13
   83 T  000000DC 588F                           addq.l    #4,sp
   84 T  000000DE B07C0000                       cmp.w     #0,d0
   85 T  000000E2 676C                           beq.s     nomidi
   86 T  000000E4 3F3C0003                       move.w    #3,-(sp)
   87 T  000000E8 3F3C0002                       move.w    #2,-(sp)  ; Bconin
   88 T  000000EC 4E4D                           trap      #13
   89 T  000000EE 588F                           addq.l    #4,sp
   90 T  000000F0 4CDF7FFE                       movem.l   (sp)+,d1-a6
   91 T  000000F4 48E77FFE                       movem.l   d1-a6,-(sp)
   92 T  000000F8 4BFA008E                       lea.l     midiw(pc),a5
   93 T  000000FC 08000007                       btst      #7,d0
   94 T  00000100 6708                           beq.s     midi2     ; Daten oder Befehl ?
   95 T  00000102 E042                           asr.w     #8,d2     ; Channel im oberen Byte des Wortes
   96 T  00000104 9002                           sub.b     d2,d0     ; Channel vom Befehl abziehen
   97 T  00000106 1A80                           move.b    d0,(a5)   ; Befehl schreiben
   98 T  00000108 6046                           bra.s     nomidi
   99 T  0000010A B002                 midi2:    cmp.b     d2,d0       ; Noten-DATA ?
  100 T  0000010C 671E                           beq.s     midi4
  101 T  0000010E B42D0001                       cmp.b     1(a5),d2    ; Noten-data schon gewesen und korrekt ?
  102 T  00000112 663C                           bne.s     nomidi
  103 T  00000114 1B400002             midi3:    move.b    d0,2(a5)    ; Velocitywert schreiben
  104 T  00000118 0C150080                       cmp.b     #$80,(a5)   ; NOTE OFF ? 
  105 T  0000011C 671A                           beq.s     midi5
  106 T  0000011E 0C150090                       cmp.b     #$90,(a5)   ; NOTE ON ?
  107 T  00000122 671C                           beq.s     midi6
  108 T  00000124 2ABC00000000         midi3b:   move.l    #0,(a5)     ; Datenwort l답chen
  109 T  0000012A 6024                           bra.s     nomidi
  110 T  0000012C B42D0001             midi4:    cmp.b     1(a5),d2  ; Noten-DATA schon gewesen ?
  111 T  00000130 67E2                           beq.s     midi3     ; dann ist es nicht Note sondern Velocity
  112 T  00000132 1B400001                       move.b    d0,1(a5)  ; Notenwert schreiben
  113 T  00000136 6018                           bra.s     nomidi
  114 T  00000138 B42D0001             midi5:    cmp.b     1(a5),d2  ; NOTE OFF und Note OK ?        
HiSoft GenST 680x0 Macro Assembler v2.08D  08/11/94  18:14:40  Sage 3



  115 T  0000013C 66E6                           bne.s     midi3b    ; wenn nein, Datenwort l답chen
  116 T  0000013E 6026                           bra.s     weg2      ; Abbruch, da NOTE OFF ! 
  117 T  00000140 B42D0001             midi6:    cmp.b     1(a5),d2  ; NOTE ON und Note OK ?        
  118 T  00000144 66DE                           bne.s     midi3b    ; wenn nein, Datenwort l답chen
  119 T  00000146 0C2D00000002                   cmp.b     #0,2(a5)  ; Velocity ist Null ?
  120 T  0000014C 66D6                           bne.s     midi3b    ; wenn nein, Datenwort l답chen
  121 T  0000014E 6016                           bra.s     weg2      ; Abbruch, da NOTE ON und Velo=Null ! 
  122 T  00000150 4CDF7FFE             nomidi:   movem.l   (sp)+,d1-a6
  123 T  00000154 D5CD                           add.l     a5,a2
  124 T  00000156 B5C1                           cmpa.l    d1,a2
  125 T  00000158 6600FF44                       bne       anf2
  126 T  0000015C BC8C                           cmp.l     a4,d6
  127 T  0000015E 6600FEF6                       bne       anf
  128 T  00000162 60000006                       bra       weg
  129 T  00000166 4CDF7FFE             weg2:     movem.l   (sp)+,d1-a6
  130 T  0000016A 205F                 weg:      move.l    (sp)+,a0
  131 T  0000016C 2086                           move.l    d6,(a0)
  132 T  0000016E 4BFA0017                       lea.l     ptr2(pc),a5
  133 T  00000172 2F0D                           move.l    a5,-(sp)
  134 T  00000174 3F3C0000                       move.w    #0,-(sp)
  135 T  00000178 3F3C0019                       move.w    #25,-(sp)
  136 T  0000017C 4E4E                           trap      #14
  137 T  0000017E 508F                           addq.l    #8,sp
  138 T  00000180 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
  139 T  00000184 4E75                           rts
  140 T  00000186 12                   ptr:      dc.b $12
  141 T  00000187 08                   ptr2:     Dc.b $8
  142 T  00000188 00000000             midiw:    dc.l 0
  143 T  0000018C                                END 

