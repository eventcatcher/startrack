HiSoft GenST 680x0 Macro Assembler v2.08D  07/11/94  19:58:12  Sage 1



    1 T  00000000 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
    2 T  00000004 266F0040                       movea.l   64(sp),a3  ; adr
    3 T  00000008 2C6F0044                       movea.l   68(sp),a6  ; fname
    4 T  0000000C 242F0048                       move.l    72(sp),d2 ; sectors
    5 T  00000010 2A2F004C                       move.l    76(sp),d5 ; len
    6 T  00000014 2E2F0050                       move.l    80(sp),d7 ; handle
    7 T  00000018 2A6F0054                       move.l    84(sp),a5 ; subber
    8 T  0000001C 286F0058                       move.l    88(sp),a4 ; Returnwert
    9 T  00000020 2F0C                           move.l    a4,-(sp)
   10 T  00000022 41F900DF0441                   lea.l     $df0441,a0          ; Flagstatus
   11 T  00000028 43F900DF04C0                   lea.l     $df04c0,a1          ; SDATA Word-Read (wegen PARITY)
   12 T  0000002E 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
   13 T  00000032 4BFA014E                       lea.l     ptr(pc),a5
   14 T  00000036 2F0D                           move.l    a5,-(sp)
   15 T  00000038 3F3C0000                       move.w    #0,-(sp)
   16 T  0000003C 3F3C0019                       move.w    #25,-(sp)
   17 T  00000040 4E4E                           trap      #14
   18 T  00000042 508F                           addq.l    #8,sp
   19 T  00000044 3F3C000B             clear:    move.w    #11,-(sp)
   20 T  00000048 4E41                           trap      #1
   21 T  0000004A 548F                           addq.l    #2,sp
   22 T  0000004C 0C8000000000                   cmpi.l    #0,d0
   23 T  00000052 670A                           beq.s     weiter
   24 T  00000054 3F3C0001                       move.w    #1,-(sp)
   25 T  00000058 4E41                           trap      #1
   26 T  0000005A 548F                           addq.l    #2,sp
   27 T  0000005C 60E6                           bra.s     clear
   28 T  0000005E 3F3C0022             weiter:   move.w    #34,-(sp)
   29 T  00000062 4E4E                           trap      #14
   30 T  00000064 548F                           addq.l    #2,sp
   31 T  00000066 2040                           movea.l   d0,a0
   32 T  00000068 4BFA0112                       lea.l     rett(pc),a5
   33 T  0000006C 2B6800200002                   move.l    32(a0),2(a5)
   34 T  00000072 4BFA0100                       lea.l     neuikbd(pc),a5
   35 T  00000076 214D0020                       move.l    a5,32(a0)
   36 T  0000007A 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
   37 T  0000007E 49FA0104                       lea.l     merk(pc),a4
   38 T  00000082 220B                           move.l    a3,d1     ; MEManf
   39 T  00000084 7C00                           moveq.l   #0,d6
   40 T  00000086 7804                           moveq.l   #4,d4
   41 T  00000088 7608                           moveq.l   #8,d3
   42 T  0000008A 5286                 anf:      addq.l    #1,d6
   43 T  0000008C 244B                           movea.l   a3,a2
   44 T  0000008E D5C5                           add.l     d5,a2     ; auf MEMende setzen
   45 T  00000090 48E7FFFC                       movem.l   d0-d7/a0-a5,-(sp)
   46 T  00000094 3F3C0001                       move.w    #1,-(sp)  ; Fseek
   47 T  00000098 3F07                           move.w    d7,-(sp)
   48 T  0000009A 2005                           move.l    d5,d0
   49 T  0000009C D080                           add.l     d0,d0
   50 T  0000009E 4480                           neg.l     d0
   51 T  000000A0 2F00                           move.l    d0,-(sp)
   52 T  000000A2 3F3C0042                       move.w    #66,-(sp)
   53 T  000000A6 4E41                           trap      #1
   54 T  000000A8 4FEF000A                       lea.l     $a(sp),sp
   55 T  000000AC 2F0B                           move.l    a3,-(sp)  ; Fread
   56 T  000000AE 2F05                           move.l    d5,-(sp)
   57 T  000000B0 3F07                           move.w    d7,-(sp)
HiSoft GenST 680x0 Macro Assembler v2.08D  07/11/94  19:58:12  Sage 2



   58 T  000000B2 3F3C003F                       move.w    #63,-(sp)
   59 T  000000B6 4E41                           trap      #1
   60 T  000000B8 4FEF000C                       lea.l     $c(sp),sp
   61 T  000000BC 4CDF3FFF                       movem.l   (sp)+,d0-d7/a0-a5
   62 T  000000C0 1010                           move.b    (a0),d0   ; FIFO halbleer ?
   63 T  000000C2 02000008                       andi.b    #8,d0
   64 T  000000C6 6730                           beq.s     anf2
   65 T  000000C8 2F01                           move.l    d1,-(sp)
   66 T  000000CA 303C03FF                       move.w    #$3ff,d0     ; ...dann FIFO halb-fuellen (FIFO-LEN/2/4-1)!
   67 T  000000CE 95FC00000004         copy:     suba.l    #4,a2
   68 T  000000D4 121A                           move.b    (a2)+,d1
   69 T  000000D6 0781                           bclr      d3,d1     ; Rechter Kanal (Bit 8 geloescht)
   70 T  000000D8 3281                           move.w    d1,(a1)   ; High-Byte senden
   71 T  000000DA 121A                           move.b    (a2)+,d1
   72 T  000000DC 0781                           bclr      d3,d1     ; Rechter Kanal (Bit 8 geloescht)
   73 T  000000DE 3281                           move.w    d1,(a1)   ; Low-Byte senden
   74 T  000000E0 121A                           move.b    (a2)+,d1
   75 T  000000E2 07C1                           bset      d3,d1     ; Linker Kanal (Bit 8 gesetzt)
   76 T  000000E4 3281                           move.w    d1,(a1)   ; High-Byte senden
   77 T  000000E6 121A                           move.b    (a2)+,d1
   78 T  000000E8 07C1                           bset      d3,d1     ; Linker Kanal (Bit 8 gesetzt)
   79 T  000000EA 3281                           move.w    d1,(a1)   ; Low-Byte senden
   80 T  000000EC 95FC00000004                   suba.l    #4,a2
   81 T  000000F2 51C8FFDA                       dbra      d0,copy
   82 T  000000F6 221F                           move.l    (sp)+,d1
   83 T  000000F8 95FC00000004         anf2:     suba.l    #4,a2
   84 T  000000FE 1010                 anf2b:    move.b    (a0),d0
   85 T  00000100 C004                           and.b     d4,d0
   86 T  00000102 67FA                           beq.s     anf2b
   87 T  00000104 101A                           move.b    (a2)+,d0
   88 T  00000106 0780                           bclr      d3,d0     ; Rechter Kanal (Bit 8 geloescht)
   89 T  00000108 3280                           move.w    d0,(a1)   ; High-Byte senden
   90 T  0000010A 1010                 anf3:     move.b    (a0),d0
   91 T  0000010C C004                           and.b     d4,d0
   92 T  0000010E 67FA                           beq.s     anf3
   93 T  00000110 101A                           move.b    (a2)+,d0
   94 T  00000112 0780                           bclr      d3,d0     ; Rechter Kanal (Bit 8 geloescht)
   95 T  00000114 3280                           move.w    d0,(a1)   ; Low-Byte senden
   96 T  00000116 1010                 anf4:     move.b    (a0),d0
   97 T  00000118 C004                           and.b     d4,d0
   98 T  0000011A 67FA                           beq.s     anf4
   99 T  0000011C 101A                           move.b    (a2)+,d0
  100 T  0000011E 07C0                           bset      d3,d0     ; Linker Kanal (Bit 8 gesetzt)
  101 T  00000120 3280                           move.w    d0,(a1)   ; High-Byte senden
  102 T  00000122 1010                 anf5:     move.b    (a0),d0
  103 T  00000124 C004                           and.b     d4,d0
  104 T  00000126 67FA                           beq.s     anf5
  105 T  00000128 101A                           move.b    (a2)+,d0
  106 T  0000012A 07C0                           bset      d3,d0     ; Linker Kanal (Bit 8 gesetzt)
  107 T  0000012C 3280                           move.w    d0,(a1)   ; Low-Byte senden
  108 T  0000012E 95FC00000004                   suba.l    #4,a2
  109 T  00000134 3014                           move.w    (a4),d0
  110 T  00000136 660C                           bne.s     weg
  111 T  00000138 95CD                           sub.l     a5,a2
  112 T  0000013A B5C1                           cmpa.l    d1,a2
  113 T  0000013C 66BA                           bne.s     anf2
  114 T  0000013E BC82                           cmp.l     d2,d6
HiSoft GenST 680x0 Macro Assembler v2.08D  07/11/94  19:58:12  Sage 3



  115 T  00000140 6600FF48                       bne       anf
  116 T  00000144 285F                 weg:      move.l    (sp)+,a4
  117 T  00000146 2886                           move.l    d6,(a4)
  118 T  00000148 4BFA0039                       lea.l     ptr2(pc),a5
  119 T  0000014C 2F0D                           move.l    a5,-(sp)
  120 T  0000014E 3F3C0000                       move.w    #0,-(sp)
  121 T  00000152 3F3C0019                       move.w    #25,-(sp)
  122 T  00000156 4E4E                           trap      #14
  123 T  00000158 508F                           addq.l    #8,sp
  124 T  0000015A 3F3C0022                       move.w    #34,-(sp)
  125 T  0000015E 4E4E                           trap      #14
  126 T  00000160 548F                           addq.l    #2,sp
  127 T  00000162 2040                           movea.l   d0,a0
  128 T  00000164 43FA0016                       lea.l     rett(pc),a1
  129 T  00000168 216900020020                   move.l    2(a1),32(a0)
  130 T  0000016E 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
  131 T  00000172 4E75                           rts
  132 T  00000174 33FC000100000184     neuikbd:  move.w    #1,merk
  133 T  0000017C 4EF90000017C         rett:     jmp       rett
  134 T  00000182 12                   ptr:      DC.b $12
  135 T  00000183 08                   ptr2:     DC.b $8
  136 T  00000184 0000                 merk:     DC.w 0
  137 T  00000186                                END 

