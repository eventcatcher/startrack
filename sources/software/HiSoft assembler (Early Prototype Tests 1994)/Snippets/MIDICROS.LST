HiSoft GenST 680x0 Macro Assembler v2.08D  01/11/94  15:58:30  Sage 1



    1 T  00000000 48E7FFFE             begin:    movem.l   d0-d7/a0-a6,-(sp)
    2 T  00000004 266F0040                       movea.l   64(sp),a3  ; von
    3 T  00000008 222F0044                       move.l    68(sp),d1  ; bis
    4 T  0000000C 262F0048                       move.l    72(sp),d3 ; loop
    5 T  00000010 242F004C                       move.l    76(sp),d2 ; midi
    6 T  00000014 41F900DF0441                   lea.l     $df0441,a0
    7 T  0000001A 43F900DF04C0                   lea.l     $df04c0,a1          ; Wordmode
    8 T  00000020 7800                           moveq.l   #0,d4               ; Anzahl der Backstep
    9 T  00000022 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
   10 T  00000026 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
   11 T  0000002A 4BFA011E                       lea.l     ptr(pc),a5
   12 T  0000002E 2F0D                           move.l    a5,-(sp)
   13 T  00000030 3F3C0000                       move.w    #0,-(sp)
   14 T  00000034 3F3C0019                       move.w    #25,-(sp)
   15 T  00000038 4E4E                           trap      #14
   16 T  0000003A 508F                           addq.l    #8,sp
   17 T  0000003C 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
   18 T  00000040 10BC0004                       move.b    #4,(a0)
   19 T  00000044 7A08                 anf0:     moveq.l   #8,d5
   20 T  00000046 7C04                           moveq.l   #4,d6
   21 T  00000048 244B                           movea.l   a3,a2
   22 T  0000004A 1010                 anf1:     move.b    (a0),d0
   23 T  0000004C C006                           and.b     d6,d0
   24 T  0000004E 67FA                           beq.s     anf1
   25 T  00000050 1E1A                           move.b    (a2)+,d7
   26 T  00000052 0B87                           bclr      d5,d7     ; Parity loeschen (Kennung fÅr Rechter Kanal)
   27 T  00000054 3287                           move.w    d7,(a1)   ; High-Byte senden
   28 T  00000056 1010                 anf2:     move.b    (a0),d0
   29 T  00000058 C006                           and.b     d6,d0
   30 T  0000005A 67FA                           beq.s     anf2
   31 T  0000005C 1E1A                           move.b    (a2)+,d7
   32 T  0000005E 0B87                           bclr      d5,d7     ; Parity loeschen (Kennung fÅr Rechter Kanal)
   33 T  00000060 3287                           move.w    d7,(a1)   ; Low-Byte senden
   34 T  00000062 1010                 anf3:     move.b    (a0),d0
   35 T  00000064 C006                           and.b     d6,d0
   36 T  00000066 67FA                           beq.s     anf3
   37 T  00000068 1E1A                           move.b    (a2)+,d7
   38 T  0000006A 0BC7                           bset      d5,d7     ; Parity einfÅgen (Kennung fÅr Linker Kanal)
   39 T  0000006C 3287                           move.w    d7,(a1)   ; High-Byte senden
   40 T  0000006E 1010                 anf4:     move.b    (a0),d0
   41 T  00000070 C006                           and.b     d6,d0
   42 T  00000072 67FA                           beq.s     anf4
   43 T  00000074 1E1A                           move.b    (a2)+,d7
   44 T  00000076 0BC7                           bset      d5,d7     ; Parity einfÅgen (Kennung fÅr Linker Kanal)
   45 T  00000078 3287                           move.w    d7,(a1)   ; Low-Byte senden
   46 T  0000007A 48E77FFE                       movem.l   d1-a6,-(sp)
   47 T  0000007E 3F3C0003                       move.w    #3,-(sp)  ; MIDI
   48 T  00000082 3F3C0001                       move.w    #1,-(sp)  ; Bconstat
   49 T  00000086 4E4D                           trap      #13
   50 T  00000088 588F                           addq.l    #4,sp
   51 T  0000008A B07C0000                       cmp.w     #0,d0
   52 T  0000008E 676C                           beq.s     nomidi
   53 T  00000090 3F3C0003                       move.w    #3,-(sp)
   54 T  00000094 3F3C0002                       move.w    #2,-(sp)  ; Bconin
   55 T  00000098 4E4D                           trap      #13
   56 T  0000009A 588F                           addq.l    #4,sp
   57 T  0000009C 4CDF7FFE                       movem.l   (sp)+,d1-a6
HiSoft GenST 680x0 Macro Assembler v2.08D  01/11/94  15:58:30  Sage 2



   58 T  000000A0 48E77FFE                       movem.l   d1-a6,-(sp)
   59 T  000000A4 4BFA00A6                       lea.l     midiw(pc),a5
   60 T  000000A8 08000007                       btst      #7,d0
   61 T  000000AC 6708                           beq.s     midi2     ; Daten oder Befehl ?
   62 T  000000AE E042                           asr.w     #8,d2     ; Channel im oberen Byte des Wortes
   63 T  000000B0 9002                           sub.b     d2,d0     ; Channel vom Befehl abziehen
   64 T  000000B2 1A80                           move.b    d0,(a5)   ; Befehl schreiben
   65 T  000000B4 6046                           bra.s     nomidi
   66 T  000000B6 B002                 midi2:    cmp.b     d2,d0       ; Noten-DATA ?
   67 T  000000B8 671E                           beq.s     midi4
   68 T  000000BA B42D0001                       cmp.b     1(a5),d2    ; Noten-data schon gewesen und korrekt ?
   69 T  000000BE 663C                           bne.s     nomidi
   70 T  000000C0 1B400002             midi3:    move.b    d0,2(a5)    ; Velocitywert schreiben
   71 T  000000C4 0C150080                       cmp.b     #$80,(a5)   ; NOTE OFF ? 
   72 T  000000C8 671A                           beq.s     midi5
   73 T  000000CA 0C150090                       cmp.b     #$90,(a5)   ; NOTE ON ?
   74 T  000000CE 671C                           beq.s     midi6
   75 T  000000D0 2ABC00000000         midi3b:   move.l    #0,(a5)     ; Datenwort lîschen
   76 T  000000D6 6024                           bra.s     nomidi
   77 T  000000D8 B42D0001             midi4:    cmp.b     1(a5),d2  ; Noten-DATA schon gewesen ?
   78 T  000000DC 67E2                           beq.s     midi3     ; dann ist es nicht Note sondern Velocity
   79 T  000000DE 1B400001                       move.b    d0,1(a5)  ; Notenwert schreiben
   80 T  000000E2 6018                           bra.s     nomidi
   81 T  000000E4 B42D0001             midi5:    cmp.b     1(a5),d2  ; NOTE OFF und Note OK ?        
   82 T  000000E8 66E6                           bne.s     midi3b    ; wenn nein, Datenwort lîschen
   83 T  000000EA 603E                           bra.s     weg2      ; Abbruch, da NOTE OFF ! 
   84 T  000000EC B42D0001             midi6:    cmp.b     1(a5),d2  ; NOTE ON und Note OK ?        
   85 T  000000F0 66DE                           bne.s     midi3b    ; wenn nein, Datenwort lîschen
   86 T  000000F2 0C2D00000002                   cmp.b     #0,2(a5)  ; Velocity ist Null ?
   87 T  000000F8 66D6                           bne.s     midi3b    ; wenn nein, Datenwort lîschen
   88 T  000000FA 602E                           bra.s     weg2      ; Abbruch, da NOTE ON und Velo=Null ! 
   89 T  000000FC 4CDF7FFE             nomidi:   movem.l   (sp)+,d1-a6
   90 T  00000100 95C4                           suba.l    d4,a2
   91 T  00000102 B5C1                           cmpa.l    d1,a2
   92 T  00000104 6600FF44                       bne       anf1
   93 T  00000108 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
   94 T  0000010C B83C0000                       cmp.b     #0,d4
   95 T  00000110 6708                           beq.s     backw
   96 T  00000112 7800                           moveq.l   #0,d4
   97 T  00000114 4A83                           tst.l     d3
   98 T  00000116 671A                           beq.s     weg
   99 T  00000118 6002                           bra.s     forw
  100 T  0000011A 7808                 backw:    moveq.l   #8,d4     ; Anzahl der Backsteps
  101 T  0000011C 2001                 forw:     move.l    d1,d0
  102 T  0000011E 220B                           move.l    a3,d1
  103 T  00000120 2640                           move.l    d0,a3
  104 T  00000122 48E7FFFE                       movem.l   d0-d7/a0-a6,-(sp)
  105 T  00000126 6000FF1C                       bra       anf0
  106 T  0000012A 4CDF7FFE             weg2:     movem.l   (sp)+,d1-a6
  107 T  0000012E 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
  108 T  00000132 4BFA0017             weg:      lea.l     ptr2(pc),a5
  109 T  00000136 2F0D                           move.l    a5,-(sp)
  110 T  00000138 3F3C0000                       move.w    #0,-(sp)
  111 T  0000013C 3F3C0019                       move.w    #25,-(sp)
  112 T  00000140 4E4E                           trap      #14
  113 T  00000142 508F                           addq.l    #8,sp
  114 T  00000144 4CDF7FFF                       movem.l   (sp)+,d0-d7/a0-a6
HiSoft GenST 680x0 Macro Assembler v2.08D  01/11/94  15:58:30  Sage 3



  115 T  00000148 4E75                           rts
  116 T  0000014A 12                   ptr:      dc.b $12
  117 T  0000014B 08                   ptr2:     Dc.b $8
  118 T  0000014C 00000000             midiw:    dc.l 0
  119 T  00000150                      
  120 T  00000150                      

